<div class="sketch-card open-ticket-container" style="padding: 1.5rem; margin: 1.5rem 0;">
  <!-- Title and description for Open Ticket -->
  <h3 style="color: var(--christmas-red); font-weight: 700; margin-bottom: 0.5rem; text-transform: uppercase;">Biglietto Open</h3>
  <p style="color: rgba(255,255,255,0.8); margin-bottom: 1.5rem; font-size: 0.95rem; line-height: 1.4;">
    <strong style="color: var(--christmas-gold);">Pass esclusivo per accedere quando preferisci</strong><br>
    Senza necessit√† di prenotare giorno e orario specifico ‚Ä¢ Massima flessibilit√† ‚Ä¢ Perfetto per regali
  </p>
  
  <!-- Completely isolated Open Ticket without Evey classes -->
  
  <form id="open-ticket-product-form" class="open-ticket-form" action="/cart/add" method="post" enctype="multipart/form-data" novalidate="novalidate">
      <!-- Open ticket structure without Evey classes -->
      <div class="open-variants">
        <div class="open-variant-container" style="display: flex; justify-content: space-between; align-items: center; padding: 5px 0;">
          <input type="hidden" name="id" value="10082871050579">
          
          <div class="open-variant-title">
            <div class="open-variant-name" style="position: relative; font-weight: bold;">
              Biglietto Open
            </div>
            <div class="open-variant-price"><span class="money" id="open-ticket-price">‚Ç¨25,00</span></div>
          </div>
          
          <div class="open-variant-quantity">
            <div class="quantity">
              <button type="button" class="quantity__button quantity__minus" style="text-transform: uppercase;">
                <svg xmlns="http://www.w3.org/2000/svg" aria-hidden="true" focusable="false" role="presentation" class="icon icon-minus" fill="none" viewBox="0 0 10 2"><path fill-rule="evenodd" clip-rule="evenodd" d="M.5 1C.5.7.7.5 1 .5h8a.5.5 0 110 1H1A.5.5 0 01.5 1z" fill="currentColor"></path></svg>
              </button>
              <input name="quantity" class="quantity__input" type="number" min="0" value="0" style="font-size: 14px !important; width: 50px !important;">
              <button type="button" class="quantity__button quantity__plus" style="text-transform: uppercase;">
                <svg xmlns="http://www.w3.org/2000/svg" aria-hidden="true" focusable="false" role="presentation" class="icon icon-plus" fill="none" viewBox="0 0 10 10"><path fill-rule="evenodd" clip-rule="evenodd" d="M1 4.51a.5.5 0 000 1h3.5l.01 3.5a.5.5 0 001-.01V5.5l3.5-.01a.5.5 0 00-.01-1H5.5L5.49.99a.5.5 0 00-1 .01v3.5l-3.5.01H1z" fill="currentColor"></path></svg>
              </button>
            </div>
          </div>
        </div>
      </div>
      
      <!-- Submit button matching Evey -->
      <button type="submit" id="open-add-to-cart" class="button button--full-width button--secondary" style="margin-top: 1rem;">
        <span id="open-cart-text">Aggiungi al Carrello</span>
      </button>
    </form>
</div>

<script>
// Load Open ticket product data and update price
fetch('/products/biglietto-open-2025.js')
  .then(response => response.json())
  .then(product => {
    if (product && product.price) {
      const priceElement = document.getElementById('open-ticket-price');
      if (priceElement) {
        const price = (product.price / 100).toFixed(2);
        priceElement.textContent = '‚Ç¨' + price.replace('.', ',');
      }
      
      // Update variant ID if different
      const variantId = product.variants && product.variants[0] ? product.variants[0].id : '10082871050579';
      const hiddenInput = document.querySelector('#open-ticket-product-form input[name="id"]');
      if (hiddenInput) {
        hiddenInput.value = variantId;
      }
    }
  })
  .catch(error => {
    // Silently fail if product cannot be loaded
  });

// Open ticket quantity controls
document.addEventListener('DOMContentLoaded', function() {
  console.log('üéüÔ∏è Open Ticket JS loaded');
  
  // Handle quantity buttons exactly like Evey
  const openContainer = document.querySelector('.open-variant-quantity');
  if (openContainer) {
    const minusBtn = openContainer.querySelector('.quantity__minus');
    const plusBtn = openContainer.querySelector('.quantity__plus');
    const input = openContainer.querySelector('.quantity__input');
    
    if (minusBtn && input) {
      minusBtn.addEventListener('click', function(e) {
        e.preventDefault();
        let value = parseInt(input.value) || 0;
        if (value > 0) {
          input.value = value - 1;
        }
      });
    }
    
    if (plusBtn && input) {
      plusBtn.addEventListener('click', function(e) {
        e.preventDefault();
        let value = parseInt(input.value) || 0;
        if (value < 10) {
          input.value = value + 1;
        }
      });
    }
  }

  // Open ticket form submission with detailed logging
  const form = document.getElementById('open-ticket-product-form');
  console.log('üéüÔ∏è Open ticket form found:', form ? 'YES' : 'NO');
  
  if (form) {
    form.addEventListener('submit', function(e) {
      e.preventDefault();
      console.log('üöÄ Open ticket form submitted');
      
      const formData = new FormData(this);
      const addBtn = document.getElementById('open-add-to-cart');
      const btnText = document.getElementById('open-cart-text');
      const quantityInput = form.querySelector('.quantity__input');
      const variantIdInput = form.querySelector('input[name="id"]');
      
      // Log form data details
      console.log('üìã Form data before submission:', {
        variantId: variantIdInput ? variantIdInput.value : 'NOT_FOUND',
        quantity: quantityInput ? quantityInput.value : 'NOT_FOUND',
        formElements: Array.from(form.elements).map(el => ({
          name: el.name,
          value: el.value,
          type: el.type
        }))
      });
      
      // Check if quantity is greater than 0
      const qty = parseInt(quantityInput?.value || '0');
      if (qty === 0) {
        console.error('‚ùå Quantity is 0, cannot add to cart');
        if (btnText) btnText.textContent = 'Seleziona quantit√†!';
        setTimeout(() => {
          if (btnText) btnText.textContent = 'Aggiungi al Carrello';
        }, 2000);
        return;
      }
      
      // Log all form data entries
      console.log('üì¶ FormData entries:');
      for (let [key, value] of formData.entries()) {
        console.log(`  ${key}: ${value}`);
      }
      
      if (addBtn) addBtn.disabled = true;
      if (btnText) btnText.textContent = 'Aggiungendo...';
      
      console.log('üåê Sending request to /cart/add.js...');
      fetch('/cart/add.js', {
        method: 'POST',
        body: formData,
        headers: {
          'Accept': 'application/json'
        }
      })
      .then(response => {
        console.log('üì° Response received:', {
          status: response.status,
          statusText: response.statusText,
          ok: response.ok
        });
        
        if (!response.ok) {
          throw new Error(`HTTP ${response.status}: ${response.statusText}`);
        }
        
        return response.json();
      })
      .then(data => {
        console.log('‚úÖ Success response:', data);
        if (btnText) btnText.textContent = 'Aggiunto! ‚úì';
        
        // Also log cart state
        fetch('/cart.js')
          .then(r => r.json())
          .then(cartData => {
            console.log('üõí Cart after addition:', {
              itemCount: cartData.item_count,
              totalPrice: cartData.total_price,
              items: cartData.items.map(item => ({
                title: item.title,
                quantity: item.quantity,
                variant_id: item.variant_id
              }))
            });
          });
        
        setTimeout(() => {
          window.location.href = '/cart';
        }, 800);
      })
      .catch(error => {
        console.error('‚ùå Open ticket cart error:', error);
        console.error('Error details:', {
          message: error.message,
          stack: error.stack
        });
        if (btnText) btnText.textContent = 'Errore - Riprova';
        if (addBtn) addBtn.disabled = false;
        setTimeout(() => {
          if (btnText) btnText.textContent = 'Aggiungi al Carrello';
        }, 2000);
      });
    });
    
    console.log('‚úÖ Open ticket form event listener attached');
  } else {
    console.error('‚ùå Open ticket form NOT found in DOM');
  }
});
</script>

<style>
/* Clean CSS - Only essential styles for Open Ticket to match Evey exactly */
.open-variant-quantity .quantity {
  width: 140px !important;
  height: 45px !important;
  border: 1.5px solid rgba(18, 18, 18, 0.08) !important;
  border-radius: 0px !important;
  min-height: 0px !important;
  position: relative !important;
  display: flex !important;
  box-sizing: border-box !important;
}

.open-variant-quantity .quantity__button {
  width: 45px !important;
  height: 42px !important;
  font-size: 28.8px !important;
  padding: 0px !important;
  background-color: transparent !important;
  border: none !important;
  display: flex !important;
  align-items: center !important;
  justify-content: center !important;
  flex-shrink: 0 !important;
  cursor: pointer !important;
  color: rgb(255, 255, 255) !important;
}

/* Match Evey button styling EXACTLY */
.sketch-card.open-ticket-container .button--secondary {
  background-color: rgb(46, 125, 50) !important;
  color: rgb(255, 255, 255) !important;
  padding: 12px 24px !important;
  border-radius: 8px !important;
  font-weight: 600 !important;
  font-size: 16px !important;
  border: 1.66667px solid rgb(46, 125, 50) !important;
  cursor: pointer !important;
  font-family: "Providence Sans", -apple-system, sans-serif !important;
  text-transform: uppercase !important;
  width: auto !important;
  display: inline-block !important;
  height: 49.5486px !important;
  box-sizing: border-box !important;
  margin: 24px 0 !important;
  opacity: 1 !important;
  text-align: center !important;
  transition: all 0.3s ease !important;
  position: relative !important;
}
</style>