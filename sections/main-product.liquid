
<!-- Product section content without extra wrapper -->
  {{ 'section-main-product.css' | asset_url | stylesheet_tag }}
  {{ 'component-price.css' | asset_url | stylesheet_tag }}

  <script>
      // Find all Evey-related elements
      const eveyContainer = document.querySelector('.evey-scheduler-container');
      const eveyButton = document.querySelector('button[data-evey-trigger="scheduler"]');
      const eveyApp = document.querySelector('[class*="evey"]');
      
      // Container analysis
      if (eveyContainer) {
        const containerStyles = getComputedStyle(eveyContainer);
        const containerRect = eveyContainer.getBoundingClientRect();
          classes: eveyContainer.className,
          id: eveyContainer.id || 'no-id',
          parentElement: eveyContainer.parentElement?.className || 'no-parent',
          innerHTML: eveyContainer.innerHTML.substring(0, 100) + '...',
          computedStyles: {
            display: containerStyles.display,
            visibility: containerStyles.visibility,
            opacity: containerStyles.opacity,
            position: containerStyles.position,
            zIndex: containerStyles.zIndex,
            overflow: containerStyles.overflow,
            pointerEvents: containerStyles.pointerEvents,
            width: containerStyles.width,
            height: containerStyles.height,
          },
          boundingRect: {
            top: containerRect.top,
            left: containerRect.left,
            width: containerRect.width,
            height: containerRect.height,
            isVisible: containerRect.width > 0 && containerRect.height > 0
          },
          offsetParent: eveyContainer.offsetParent?.tagName || 'null',
          isHidden: eveyContainer.offsetParent === null
        });
        
        // Check parent hierarchy for hiding
        let parent = eveyContainer.parentElement;
        let level = 1;
        while (parent && level <= 5) {
          const parentStyles = getComputedStyle(parent);
          if (parentStyles.display === 'none' || parentStyles.visibility === 'hidden' || parentStyles.opacity === '0') {
              tagName: parent.tagName,
              className: parent.className,
              display: parentStyles.display,
              visibility: parentStyles.visibility,
              opacity: parentStyles.opacity
            });
          }
          parent = parent.parentElement;
          level++;
        }
      } else {
      }
      
      // Button analysis
      if (eveyButton) {
        const buttonStyles = getComputedStyle(eveyButton);
        const buttonRect = eveyButton.getBoundingClientRect();
          text: eveyButton.textContent,
          classes: eveyButton.className,
          attributes: Array.from(eveyButton.attributes).map(a => a.name + '=' + a.value),
          computedStyles: {
            display: buttonStyles.display,
            visibility: buttonStyles.visibility,
            opacity: buttonStyles.opacity,
            position: buttonStyles.position,
            zIndex: buttonStyles.zIndex,
            pointerEvents: buttonStyles.pointerEvents,
            cursor: buttonStyles.cursor,
            width: buttonStyles.width,
            height: buttonStyles.height,
            color: buttonStyles.color,
            backgroundColor: buttonStyles.backgroundColor
          },
          boundingRect: {
            top: buttonRect.top,
            left: buttonRect.left,
            width: buttonRect.width,
            height: buttonRect.height,
            isInViewport: buttonRect.top < window.innerHeight && buttonRect.bottom > 0
          },
          isClickable: buttonStyles.pointerEvents !== 'none' && buttonStyles.cursor === 'pointer',
          hasEventListeners: typeof eveyButton.onclick === 'function' || eveyButton.hasAttribute('onclick')
        });
        
        // Test if button is actually clickable
        try {
          const isClickable = document.elementsFromPoint(
            buttonRect.left + buttonRect.width/2,
            buttonRect.top + buttonRect.height/2
          ).includes(eveyButton);
          
          if (!isClickable) {
            const blockingElements = document.elementsFromPoint(
              buttonRect.left + buttonRect.width/2,
              buttonRect.top + buttonRect.height/2
            );
              tagName: el.tagName,
              className: el.className,
              zIndex: getComputedStyle(el).zIndex
            })));
          }
        } catch (e) {
        }
      } else {
        
        // Try to find any button with Evey classes
        const allButtons = document.querySelectorAll('button');
        const eveyButtons = Array.from(allButtons).filter(b => 
          b.className.includes('evey') || 
          b.hasAttribute('data-evey-trigger') ||
          b.textContent.toLowerCase().includes('seleziona')
        );
        
        if (eveyButtons.length > 0) {
            text: b.textContent,
            className: b.className,
            dataAttributes: Array.from(b.attributes).filter(a => a.name.startsWith('data')).map(a => a.name)
          })));
        }
      }
      
      // Check for any Evey app elements
      const allEveyElements = document.querySelectorAll('[class*="evey"], [id*="evey"], [data-evey]');
      if (allEveyElements.length > 0) {
          tagName: el.tagName,
          className: el.className,
          id: el.id,
          isVisible: getComputedStyle(el).display !== 'none'
        })));
      }
    }
    
    // Run inspection at multiple times
    deepInspectEveyButton(); // Immediate
    
    document.addEventListener('DOMContentLoaded', () => {
      deepInspectEveyButton();
    });
    
    window.addEventListener('load', () => {
      deepInspectEveyButton();
    });
    
    // Check after delays for async loading - LIMITED TO 3 TIMES
    let inspectionCount = 0;
    const maxInspections = 3;
    
    [500, 1000, 2000].forEach(delay => {
      setTimeout(() => {
        if (inspectionCount < maxInspections) {
          deepInspectEveyButton();
          inspectionCount++;
        }
      }, delay);
    });
    
    // Monitor mutations - with rate limiting
    let mutationLogCount = 0;
    const maxMutationLogs = 20;
    
    const mutationObserver = new MutationObserver((mutations) => {
      if (mutationLogCount >= maxMutationLogs) {
        mutationObserver.disconnect();
        return;
      }
      
      mutations.forEach(mutation => {
        if (mutation.type === 'childList') {
          mutation.addedNodes.forEach(node => {
            if (node.nodeType === 1) { // Element node
              if (node.className?.includes('evey') || node.querySelector?.('[class*="evey"]')) {
                if (node.className?.includes('evey-scheduler-container')) {
                  setTimeout(() => {
                    deepInspectEveyButton();
                  }, 500);
                }
                mutationLogCount++;
              }
            }
          });
        }
      });
    });
    
    // Start observing when DOM is ready
    document.addEventListener('DOMContentLoaded', () => {
      mutationObserver.observe(document.body, {
        childList: true,
        subtree: true,
        attributes: true,
        attributeOldValue: true,
        attributeFilter: ['style', 'class']
      });
    });
    
    // REPLACEMENT STRATEGY - Create our own tooltips outside Evey's control
    
    // Store our custom tooltips
    const customTooltips = new Map();
    
    // Create a custom tooltip that Evey can't destroy
    function createCustomTooltip(eveyTooltip, iconElement) {
      // Get the content from Evey's tooltip (but not the close button if it exists)
      const eveyContent = eveyTooltip.cloneNode(true);
      const existingClose = eveyContent.querySelector('.evey-tooltip-close, .mobile-close-btn');
      if (existingClose) existingClose.remove();
      
      const variantName = iconElement.closest('.evey__variant')?.querySelector('.evey__variant-name')?.textContent || 'Unknown';
      
      // Create our own tooltip container outside Evey
      const customTooltip = document.createElement('div');
      customTooltip.className = 'custom-tooltip-replacement';
      customTooltip.innerHTML = eveyContent.innerHTML;
      customTooltip.setAttribute('data-variant', variantName);
      
      // Position it properly relative to the variant container
      let variantContainer = iconElement.closest('.evey__variant');
      
      // Try different selectors if the first one doesn't work
      if (!variantContainer) {
        variantContainer = iconElement.closest('[class*="evey__variant"]');
      }
      if (!variantContainer) {
        variantContainer = iconElement.closest('.evey__variants')?.querySelector('.evey__variant');
      }
      if (!variantContainer) {
        // Log what we're working with
        
        // Just center it on screen
        customTooltip.style.cssText = `
          position: fixed;
          top: 50%;
          left: 50%;
          transform: translate(-50%, -50%);
          width: 400px;
          max-width: calc(100vw - 40px);
          background: rgba(26, 26, 26, 0.98);
          color: white;
          padding: 20px;
          border-radius: 12px;
          box-shadow: 0 8px 32px rgba(0,0,0,0.4);
          z-index: 9959;
          display: block;
          opacity: 1;
          visibility: visible;
          font-size: 16px;
          line-height: 1.6;
        `;
      } else {
        // Also center if we have variant container
        customTooltip.style.cssText = `
          position: fixed;
          top: 50%;
          left: 50%;
          transform: translate(-50%, -50%);
          width: 400px;
          max-width: calc(100vw - 40px);
          background: rgba(26, 26, 26, 0.98);
          color: white;
          padding: 20px;
          border-radius: 12px;
          box-shadow: 0 8px 32px rgba(0,0,0,0.4);
          z-index: 9959;
          display: block;
          opacity: 1;
          visibility: visible;
          font-size: 16px;
          line-height: 1.6;
        `;
      }
      
      // Add close button - PROPER X
      const closeBtn = document.createElement('span');
      closeBtn.className = 'custom-tooltip-close';
      closeBtn.innerHTML = '✕';  // Using proper multiplication sign
      closeBtn.style.cssText = `
        position: absolute;
        top: 15px;
        right: 15px;
        color: white;
        font-size: 24px;
        font-weight: 300;
        cursor: pointer;
        width: 24px;
        height: 24px;
        display: flex;
        align-items: center;
        justify-content: center;
        line-height: 1;
        opacity: 0.8;
        transition: opacity 0.2s;
        font-family: system-ui, -apple-system, sans-serif;
      `;
      
      closeBtn.onmouseover = () => {
        closeBtn.style.opacity = '1';
      };
      closeBtn.onmouseout = () => {
        closeBtn.style.opacity = '0.9';
      };
      closeBtn.onclick = (e) => {
        e.stopPropagation();
        customTooltip.remove();
        customTooltips.delete(variantName);
      };
      
      customTooltip.appendChild(closeBtn);
      
      // Add to body (outside Evey's control)
      document.body.appendChild(customTooltip);
      customTooltips.set(variantName, customTooltip);
      
      return customTooltip;
    }
    
    // NEW APPROACH - Create custom tooltips on click
    document.addEventListener('click', function(e) {
      const clickedIcon = e.target.closest('.evey-info-icon');
      if (!clickedIcon) return;
      
      e.preventDefault();
      e.stopPropagation();
      
      
      const variantName = clickedIcon.closest('.evey__variant')?.querySelector('.evey__variant-name')?.textContent || 'Unknown';
      
      // Check if we already have a custom tooltip for this variant
      if (customTooltips.has(variantName)) {
        const existing = customTooltips.get(variantName);
        if (existing.style.display === 'none') {
          // Re-show it
          existing.style.display = 'block';
        } else {
          // Hide it
          existing.style.display = 'none';
        }
        return;
      }
      
      // Find Evey's tooltip to copy content
      let eveyTooltip = clickedIcon.parentElement?.querySelector('.evey-ticket-tooltip');
      if (!eveyTooltip) {
        eveyTooltip = clickedIcon.closest('.evey__variant')?.querySelector('.evey-ticket-tooltip');
      }
      
      if (!eveyTooltip) {
        return;
      }
      
      // Hide all other custom tooltips
      customTooltips.forEach((tooltip, name) => {
        if (name !== variantName) {
          tooltip.style.display = 'none';
        }
      });
      
      // Create our custom tooltip
      const created = createCustomTooltip(eveyTooltip, clickedIcon);
      if (!created) {
        console.error('Failed to create custom tooltip');
      }
    }, true);
    
    // Clean up when clicking outside
    document.addEventListener('click', function(e) {
      if (!e.target.closest('.evey-info-icon') && !e.target.closest('.custom-tooltip-replacement')) {
        // Hide all custom tooltips when clicking outside
        customTooltips.forEach(tooltip => {
          tooltip.style.display = 'none';
        });
      }
    });
    // ENABLE AND SHOW EVEY BUTTON - AGGRESSIVE FIX
    function fixEveyButton() {
      const eveyButton = document.querySelector('button[data-evey-trigger="scheduler"]');
      const eveyContainer = document.querySelector('.evey-scheduler-container');
      
      if (eveyButton) {
        // Remove disabled attribute
        if (eveyButton.disabled || eveyButton.hasAttribute('disabled')) {
          eveyButton.removeAttribute('disabled');
          eveyButton.disabled = false;
        }
        
        // Force visibility without changing layout
        // Remove ALL Shopify classes that trigger automatic cart behavior
        eveyButton.className = ''; // Clear all classes
        eveyButton.classList.add('evey-scheduler-btn');
        
        // Check if button is inside a form that submits to cart
        const parentForm = eveyButton.closest('form');
        if (parentForm && parentForm.action && parentForm.action.includes('/cart')) {
          
          // SOLUTION: Move button OUTSIDE the cart form
          const container = eveyButton.parentElement;
          const newButton = eveyButton.cloneNode(true);
          
          // Remove old button from form
          eveyButton.remove();
          
          // Insert new button AFTER the form (outside of it)
          parentForm.insertAdjacentElement('afterend', newButton);
          
          // Update reference to new button
          eveyButton = newButton;
          
          
          // Re-apply event listeners to the moved button
          eveyButton.addEventListener('click', function(e) {
            e.stopImmediatePropagation();
            e.stopPropagation();
          }, true);
        }
        
        eveyButton.style.cssText = `
          visibility: visible !important;
          display: block !important;
          opacity: 1 !important;
          pointer-events: auto !important;
        `;
        
        // Force uppercase text directly  
        const setUppercaseText = () => {
          if (eveyButton && (eveyButton.textContent.includes('Choose') || eveyButton.textContent.includes('Seleziona'))) {
            eveyButton.textContent = 'SELEZIONA DATA E ORA';
          }
        };
        setUppercaseText();
        
        // Re-apply uppercase text after any changes
        const observer = new MutationObserver(() => {
          setUppercaseText();
        });
        observer.observe(eveyButton, { childList: true, characterData: true, subtree: true });
        
        // FORCE BLOCK: Add click listener to prevent all cart behavior
        eveyButton.addEventListener('click', function(e) {
          // Stop all propagation to prevent shop_events_listener from catching it
          e.stopImmediatePropagation();
          e.stopPropagation();
          // Don't prevent default - let Evey handle the click
        }, true); // Use capture phase to run before other listeners
        
        // NUCLEAR OPTION - Force absolute positioning if still invisible
        const rect = eveyButton.getBoundingClientRect();
        if (rect.width === 0 || rect.height === 0) {
          eveyButton.style.cssText = `
            position: fixed !important;
            bottom: 20px !important;
            left: 50% !important;
            transform: translateX(-50%) !important;
            width: calc(100% - 40px) !important;
            max-width: 400px !important;
            height: 50px !important;
            background: #d32f2f !important;
            color: white !important;
            border: none !important;
            padding: 15px !important;
            font-size: 18px !important;
            font-weight: bold !important;
            border-radius: 8px !important;
            cursor: pointer !important;
            text-transform: uppercase !important;
            z-index: 9959 !important;
            visibility: visible !important;
            display: block !important;
            opacity: 1 !important;
            pointer-events: auto !important;
            box-shadow: 0 4px 12px rgba(0,0,0,0.3) !important;
          `;
        }
        
        
        // IMMEDIATE NUCLEAR CHECK - Right after applying styles
        setTimeout(() => {
          const immediateRect = eveyButton.getBoundingClientRect();
          if (immediateRect.width === 0 || immediateRect.height === 0) {
            eveyButton.style.cssText = `
              position: fixed !important;
              bottom: 20px !important;
              left: 50% !important;
              transform: translateX(-50%) !important;
              width: calc(100% - 40px) !important;
              max-width: 400px !important;
              height: 50px !important;
              background: #d32f2f !important;
              color: white !important;
              border: none !important;
              padding: 15px !important;
              font-size: 18px !important;
              font-weight: bold !important;
              border-radius: 8px !important;
              cursor: pointer !important;
              text-transform: uppercase !important;
              z-index: 9959 !important;
              visibility: visible !important;
              display: block !important;
              opacity: 1 !important;
              pointer-events: auto !important;
              box-shadow: 0 4px 12px rgba(0,0,0,0.3) !important;
            `;
          }
        }, 100);
      }
      
      if (eveyContainer) {
        eveyContainer.style.cssText = `
          visibility: visible !important;
          display: block !important;
          opacity: 1 !important;
          width: 100% !important;
          min-width: 200px !important;
          min-height: 50px !important;
        `;
      }
    }
    
    // FORCE NUCLEAR OPTION - Execute immediately
    setTimeout(() => {
      const forcedBtn = document.querySelector('button[data-evey-trigger="scheduler"]');
      if (forcedBtn) {
        const forcedRect = forcedBtn.getBoundingClientRect();
        if (forcedRect.width === 0 || forcedRect.height === 0) {
          forcedBtn.style.cssText = `
            position: fixed !important;
            bottom: 20px !important;
            left: 50% !important;
            transform: translateX(-50%) !important;
            width: calc(100% - 40px) !important;
            max-width: 400px !important;
            height: 50px !important;
            background: #d32f2f !important;
            color: white !important;
            border: none !important;
            padding: 15px !important;
            font-size: 18px !important;
            font-weight: bold !important;
            border-radius: 8px !important;
            cursor: pointer !important;
            text-transform: uppercase !important;
            z-index: 9959 !important;
            visibility: visible !important;
            display: block !important;
            opacity: 1 !important;
            pointer-events: auto !important;
            box-shadow: 0 4px 12px rgba(0,0,0,0.3) !important;
          `;
        } else {
        }
      }
    }, 3000);
    
    // Run on load and after delays - only 3 times
    document.addEventListener('DOMContentLoaded', () => {
      fixEveyButton();
    });
    
    setTimeout(() => { 
      fixEveyButton();
    }, 1000);
    
    setTimeout(() => { 
      fixEveyButton();
    }, 2000);
    
    setTimeout(() => { 
      fixEveyButton();
    }, 3000);
    
    // Monitor for any style changes and reapply
    const buttonObserver = new MutationObserver((mutations) => {
      mutations.forEach(mutation => {
        const eveyButton = mutation.target;
        if (eveyButton && eveyButton.matches('button[data-evey-trigger="scheduler"]')) {
          // Check if button was disabled
          if (eveyButton.disabled || eveyButton.hasAttribute('disabled')) {
            fixEveyButton();
          }
        }
      });
    });
    
    // PERSISTENT BUTTON RECREATION - keeps recreating if destroyed
    let buttonRecreationInterval;
    
    function startButtonRecreation() {
      clearInterval(buttonRecreationInterval);
      
      buttonRecreationInterval = setInterval(() => {
        const eveyButton = document.querySelector('button[data-evey-trigger="scheduler"]');
        const eveyContainer = document.querySelector('.evey-scheduler-container');
        
        if (!eveyButton && eveyContainer) {
          
          // Try to trigger Evey to recreate the button
          const eveyApp = document.querySelector('[class*="evey__multi-variant"]');
          if (eveyApp) {
            // Trigger a change event that might make Evey recreate the button
            const event = new Event('change', { bubbles: true });
            eveyApp.dispatchEvent(event);
          }
          
          // Also try to recreate manually
          setTimeout(() => {
            const stillNoButton = !document.querySelector('button[data-evey-trigger="scheduler"]');
            if (stillNoButton && eveyContainer) {
              createFallbackButton(eveyContainer);
            }
          }, 500);
        } else if (eveyButton) {
          fixEveyButton(); // Apply our fixes if button exists
        }
      }, 2000); // Check every 2 seconds
      
    }
    
    function createFallbackButton(container) {
      // Remove any existing fallback
      const existing = container.querySelector('.fallback-scheduler-btn');
      if (existing) existing.remove();
      
      // Create our own button
      const fallbackBtn = document.createElement('button');
      fallbackBtn.className = 'fallback-scheduler-btn btn action-button';
      fallbackBtn.textContent = 'SELEZIONA DATA E ORA';
      fallbackBtn.setAttribute('data-evey-trigger', 'scheduler');
      
      fallbackBtn.style.cssText = `
        visibility: visible !important;
        display: block !important;
        opacity: 1 !important;
        pointer-events: auto !important;
        width: 100% !important;
        background: #d32f2f !important;
        color: white !important;
        border: none !important;
        padding: 15px !important;
        font-size: 16px !important;
        border-radius: 6px !important;
        cursor: pointer !important;
        text-transform: uppercase !important;
        margin: 10px 0 !important;
        z-index: 995 !important;
        position: relative !important;
      `;
      
      // Add click handler that tries to trigger the real Evey functionality
      fallbackBtn.addEventListener('click', () => {
        
        // Try to find and trigger the real Evey button if it exists
        const realButton = document.querySelector('button[data-evey-trigger="scheduler"]:not(.fallback-scheduler-btn)');
        if (realButton) {
          realButton.click();
        } else {
          // Try to trigger Evey events
          const eveyEvent = new CustomEvent('evey:scheduler', { bubbles: true });
          container.dispatchEvent(eveyEvent);
          
          alert('Seleziona prima una variante di biglietto, poi prova di nuovo.');
        }
      });
      
      container.appendChild(fallbackBtn);
    }
    
    // Start monitoring
    document.addEventListener('DOMContentLoaded', () => {
      setTimeout(startButtonRecreation, 3000); // Start after 3 seconds
    });
  </script>
  
  <style>
    /* Minimal fix for Evey button visibility */
    @media (max-width: 1023px) {
      /* Fix the blocking mobile-product-original element */
      .mobile-product-original {
        pointer-events: none !important;
      }
      
      /* Allow pointer events on child elements that need them */
      .mobile-product-original * {
        pointer-events: auto !important;
      }
    }
    
    /* HIDE ALL EVEY TOOLTIPS PERMANENTLY */
    .evey-ticket-tooltip,
    .evey__ticket-tooltip,
    .evey-tooltip,
    [class*="evey"][class*="tooltip"] {
      display: none !important;
      opacity: 0 !important;
      visibility: hidden !important;
      pointer-events: none !important;
    }
    
    /* Ensure our custom tooltips stay visible */
    .custom-tooltip-replacement {
      position: fixed !important;
      z-index: 9959 !important;
    }
    
    /* Style the close button properly */
    .custom-tooltip-close:hover {
      transform: scale(1.1);
    }
    
    /* NUCLEAR CSS - Override everything with max specificity */
    .evey-ticket-tooltip.force-visible {
      opacity: 1 !important;
      visibility: visible !important;
      display: block !important;
      pointer-events: auto !important;
      z-index: 995 !important;
      transform: none !important;
      transition: none !important;
      animation: none !important;
    }
    
    /* Disable all Evey animations/transitions for forced tooltips */
    .evey-ticket-tooltip.force-visible * {
      animation: none !important;
      transition: none !important;
    }
    
    /* Ensure parent doesn't hide it */
    .evey__variant:has(.evey-ticket-tooltip.force-visible) {
      z-index: 99998 !important;
      overflow: visible !important;
    }
  </style>

  <style>
    /* Product page aligned with other pages - reset all extra spacing */
    
    /* Reset container paddings - .formatted-content should have no padding like normal pages */
    .formatted-content {
      padding: 0 !important; /* Same as normal pages */
    }
    
    .container,
    .page-width {
      max-width: none !important;
      padding: 0 !important;
      margin: 0 !important;
    }
    
    /* Reset product-specific spacings */
    .product__info-container,
    .product__info-container > * {
      margin: 0 !important;
      padding: 0 !important;
    }
    
    /* Reset any wrapper spacings */
    .product__info-wrapper {
      padding: 0 !important;
      margin: 0 !important;
      max-width: 100% !important;
    }
    
    /* Product title - override any conflicting styles */
    .product__title h1,
    .product__title.formatted-content h1 {
      font-size: 3rem !important;
      color: var(--text-white) !important;
      margin-bottom: 2rem !important;
      text-align: start !important;
      font-family: 'Providence Sans', sans-serif !important;
      text-transform: uppercase !important;
      font-weight: normal !important;
      letter-spacing: 0.02em !important;
      line-height: 1.2 !important;
    }
    
    @media (min-width: 1024px) {
      .product__title h1,
      .product__title.formatted-content h1 {
        font-size: 3rem !important;
        margin-bottom: 1.5rem !important;
      }
    }
    
    @media (min-width: 1440px) {
      .product__title h1,
      .product__title.formatted-content h1 {
        font-size: 3.5rem !important;
      }
    }
    
    /* Mobile: ensure same spacing/padding reset as desktop */
    @media (max-width: 1023px) {
      .formatted-content {
        padding: 0 !important; /* Same reset as desktop */
      }
      
      .container,
      .page-width {
        max-width: none !important;
        padding: 0 !important;
        margin: 0 !important;
      }
      
      .product__info-container,
      .product__info-container > * {
        margin: 0 !important;
        padding: 0 !important;
      }
      
      .product__info-wrapper {
        padding: 0 !important;
        margin: 0 !important;
        max-width: 100% !important;
      }
    }
    
    .price {
      color: #ffb300;
    }
    
    .btn {
      background: #2e7d32;
      border-color: #2e7d32;
    }
    
    .btn:hover {
      background: #d32f2f;
      border-color: #d32f2f;
    }
    
    .accordion__title {
      color: #2e7d32;
    }
    
    /* Force single column layout - image on top, info below */
    @media screen and (min-width: 990px) {
      .product.grid--2-col-tablet {
        display: grid;
        grid-template-columns: 1fr;
        gap: 2rem;
        max-width: 800px;
        margin: 0 auto;
      }
      
      .product__media-wrapper {
        order: 1;
      }
      
      .product__info-wrapper {
        order: 2;
      }
    }
    
    /* Hide product media completely */
    .product__media-wrapper {
      display: none !important;
    }
    
    /* Ensure single column layout without media */
    .product.grid--2-col-tablet {
      grid-template-columns: 1fr !important;
    }
    
    /* Container styling - align with normal pages (no extra containers) */
    
    /* Info blocks and guides - full width, not cards */
    .product-block__content,
    .accordion {
      max-width: 100%;
      background: transparent !important;
      border: none !important;
      box-shadow: none !important;
    }
    
    /* Product info wrapper - already reset above */
    
    /* Hide product title - will be replaced with custom liquid */
    /* Keep product title visible */
    .product__title {
      display: block !important;
      margin: 0;
      padding: 0;
    }
    
    /* Price styling - integrated with cards */
    .price {
      color: var(--christmas-green) !important;
      font-size: 2.2rem !important;
      margin-bottom: 2rem !important;
      font-weight: 700 !important;
    }
    
    /* Buy buttons - unified styling */
    .product-form__buttons {
      margin: 1.5rem 0 !important;
    }
    
    .btn.product-form__cart-submit {
      background: var(--christmas-red) !important;
      color: white !important;
      padding: 1rem 2rem !important;
      border-radius: 8px !important;
      text-decoration: none !important;
      display: inline-block !important;
      font-weight: 600 !important;
      font-size: 1.1rem !important;
      border: none !important;
      text-transform: uppercase !important;
      width: 100% !important;
      min-height: 48px !important;
      letter-spacing: 0.5px !important;
    }
    
    /* Typography - exact match with pagina-base-funzionante */
    h1 { 
      font-size: 2.5rem; 
      margin: 0 0 1rem 0; 
      text-align: center; 
    }
    
    h2 { 
      font-size: 2rem; 
      margin: 2rem 0 1rem 0; 
      color: var(--christmas-red); 
    }
    
    h3 { 
      font-size: 32px; 
      font-weight: 400; 
      color: white; 
      text-transform: uppercase;
      letter-spacing: 1.6px;
      line-height: 44.8px;
      margin: 32px 0 16px 0;
    }
    
    h4 { 
      font-size: 1.125rem; 
      margin: 0.5rem 0; 
      text-transform: uppercase;
      font-weight: 600;
    }
    
    .product__info p, .product-description, .product__text { 
      font-size: 1.125rem; 
      margin: 0 0 1rem 0; 
      line-height: 1.6 !important;
      color: rgba(255,255,255,0.9) !important;
    }
    
    /* Consistent spacing for all blocks */
    .product__info-container > * {
      margin-bottom: 1.5rem !important;
    }
    
    /* Last element no margin */
    .product__info-container > *:last-child {
      margin-bottom: 0 !important;
    }
    
    /* Evey section title - inserted before Evey loads */
    .evey-title-inserted {
      color: var(--christmas-gold); 
      font-size: 1.5rem; 
      font-weight: 700; 
      margin: 0 0 1.5rem 0; 
      text-align: center;
    }

    /* MINIMAL EVEY STYLING - Keep original layout, just fix fonts and colors */
    .evey-override button,
    .evey-override input[type="submit"] {
      font-family: 'Providence Sans', -apple-system, sans-serif !important;
    }
    
    /* Fix Evey button fonts without breaking layout */
    .evey-override .evey-scheduler-button,
    .evey-override [data-evey-scheduler] button,
    .evey-override button:contains("Seleziona"),
    .evey-override button[data-evey-trigger],
    .evey-override [data-evey-string],
    .evey-override button,
    .evey-override input[type="submit"],
    [class*="evey"] button,
    [id*="evey"] button {
      font-family: 'Providence Sans', -apple-system, sans-serif !important;
      background: #dc2626 !important;
      color: white !important;
      border: none !important;
      font-weight: 600 !important;
      text-transform: uppercase !important;
    }
    
    /* Submit button styling */
    .evey-override button[type="submit"],
    .evey-override .button--secondary {
      font-family: 'Providence Sans', -apple-system, sans-serif !important;
      background: #dc2626 !important;
      color: white !important;
      border: none !important;
      font-weight: 600 !important;
      text-transform: uppercase !important;
    }
    
    /* REMOVED - These aggressive overrides were breaking Evey */
    
    /* Card content text - increased size */
    .card-container .card p {
      font-size: 17px !important;
      line-height: 1.5 !important;
    }
    
    /* Card titles */
    .card-container .card h3 {
      font-size: 20px !important;
      line-height: 1.3 !important;
      margin-bottom: 12px !important;
    }
    
    /* Alert boxes text */
    .alert-box, .info-box-arancio, .info-box {
      font-size: 17px !important;
      line-height: 1.5 !important;
    }
    
    /* Accordion titles */
    .accordion__title {
      font-size: 19px !important;
    }
    
    /* Icon sizing handled by specific classes in theme.css */
    
    /* Ensure all quantity button icons are visible - both Evey and regular */
    .quantity__button svg,
    .quantity__button .icon,
    .evey__variant-container .quantity__button svg,
    .evey__variant-container .quantity__plus svg,
    .evey__variant-container .quantity__minus svg,
    .quantity input[type="number"] ~ button svg,
    quantity-input .quantity__button svg,
    quantity-input .quantity__button .icon {
      width: 16px !important;
      height: 16px !important;
      stroke: currentColor !important;
      fill: currentColor !important;
      stroke-width: 2 !important;
      display: block !important;
      opacity: 1 !important;
      visibility: visible !important;
    }
    
    /* Quantity buttons - let Shopify handle them completely */
    
    
    /* Evey app block styling - ensure buttons are visible */
    [data-evey-string], 
    .evey-scheduler-button,
    button[data-evey-trigger] {
      background: #ffb300 !important;
      border-color: #ffb300 !important;
      color: #0d1b0f !important;
      font-weight: 600 !important;
      padding: 1rem !important;
      border-radius: 8px !important;
      font-size: 1rem !important;
      width: 100% !important;
      margin: 1rem 0 !important;
      display: block !important;
      text-align: center !important;
    }
    
    [data-evey-string]:hover,
    .evey-scheduler-button:hover,
    button[data-evey-trigger]:hover {
      background: #d32f2f !important;
      border-color: #d32f2f !important;
      color: white !important;
    }
    
    /* Modern variant buttons styling */
    .variant-input {
      background: linear-gradient(135deg, #2e7d32, #388e3c);
      color: white;
      border: 2px solid #2e7d32;
      border-radius: 12px;
      padding: 16px 24px;
      font-weight: 600;
      font-size: 16px;
      transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
      cursor: pointer;
      box-shadow: 0 4px 16px rgba(46, 125, 50, 0.3);
      text-shadow: 1px 1px 2px rgba(0, 0, 0, 0.2);
    }
    
    .variant-input:hover,
    .variant-input:checked + label {
      background: linear-gradient(135deg, #d32f2f, #e53935);
      border-color: #d32f2f;
      transform: translateY(-2px);
      box-shadow: 0 6px 20px rgba(211, 47, 47, 0.4);
    }
    
    /* Modern Add to cart and checkout buttons */
    .product-form__buttons .btn,
    .shopify-payment-button__button {
      background: linear-gradient(135deg, #ffb300, #ff8f00) !important;
      color: #0d1b0f !important;
      border: 3px solid #ffb300 !important;
      border-radius: 16px !important;
      padding: 20px 32px !important;
      font-weight: 700 !important;
      font-size: 18px !important;
      text-align: center !important;
      transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1) !important;
      cursor: pointer !important;
      box-shadow: 0 6px 24px rgba(255, 179, 0, 0.4) !important;
      text-shadow: 1px 1px 2px rgba(0, 0, 0, 0.1) !important;
      text-transform: uppercase !important;
      letter-spacing: 1px !important;
    }
    
    .product-form__buttons .btn:hover,
    .shopify-payment-button__button:hover {
      background: #b91c1c !important;
      border-color: #b91c1c !important;
      color: white !important;
      transform: translateY(-2px) !important;
      box-shadow: 0 4px 12px rgba(220, 38, 38, 0.3) !important;
      transition: all 0.3s ease !important;
    }
    
    /* Accordion icons */
    .accordion__title .icon {
      width: 14px !important;
      height: 14px !important;
    }
    
    /* Slider/Carousel buttons */
    .slider-button {
      background: #2e7d32;
      border: 2px solid #2e7d32;
      border-radius: 50%;
      width: 40px;
      height: 40px;
      display: flex;
      align-items: center;
      justify-content: center;
    }
    
    .slider-button:hover {
      background: #d32f2f;
      border-color: #d32f2f;
    }
    
    .slider-button .icon {
      width: 12px !important;
      height: 12px !important;
    }
    
    /* Product modal dialog */
    .product-media-modal__dialog {
      background: #0d1b0f;
      border: 2px solid #2e7d32;
    }
    
    /* View full details link */
    .product__view-details {
      color: #2e7d32;
      text-decoration: none;
      font-weight: 600;
      display: inline-flex;
      align-items: center;
      gap: 0.5rem;
    }
    
    .product__view-details:hover {
      color: #d32f2f;
    }
    
    .product__view-details .icon {
      width: 16px !important;
      height: 16px !important;
    }
    
    /* Fix sketch cards - ensure they display properly */
    /* REMOVED .sketch-card CSS */
    
    /* REMOVED .sketch-border CSS */
    
    /* Quote card styles handled in theme.css */
    
    /* Quote background styles handled in theme.css */
    }
    
    /* Media gallery layout fixes */
    .product__media-gallery {
      position: relative;
    }
    
    .product__media {
      position: relative;
      margin-bottom: 1rem;
      max-width: 100%;
    }
    
    .product__media img {
      width: 100%;
      height: auto;
      max-height: 500px;
      object-fit: contain;
      border-radius: 8px;
    }
    
    /* Gallery controls */
    .product__media-gallery .icon,
    .product__media .icon,
    .media-gallery .icon {
      width: 16px !important;
      height: 16px !important;
    }
    
    .product__media-toggle {
      background: #2e7d32;
      border: 2px solid #2e7d32;
      color: white;
      border-radius: 6px;
      padding: 0.5rem;
      position: absolute;
      top: 10px;
      right: 10px;
      z-index: 2;
    }
    
    .product__media-toggle:hover {
      background: #d32f2f;
      border-color: #d32f2f;
    }
    
    /* Gallery thumbnail styling */
    .media-gallery .media {
      margin-bottom: 0.5rem;
    }
    
    .media-gallery .media img {
      border-radius: 6px;
    }
    
    /* Modal button styling */
    .product__modal-opener {
      background: transparent;
      border: none;
      cursor: pointer;
      display: block;
      width: 100%;
    }
    
    /* Remove conflicting styles */
    .media--transparent {
      background: transparent !important;
    }
    
    /* Product-specific sketch cards (Evey, Open Ticket) - more specific than theme.css */
    .formatted-content .sketch-card,
    .product__info .sketch-card {
      position: relative;
      background: rgba(255, 255, 255, 0.05) !important;
      border: 1px solid rgba(255, 255, 255, 0.1) !important;
      border-radius: 12px !important;
      padding: 1rem 1.5rem !important;
      margin-bottom: 1rem !important;
      transition: all 0.3s ease !important;
    }
    
    /* Consistent spacing inside product cards like normal menu-section-cards */
    .formatted-content .sketch-card h3:first-child,
    .formatted-content .sketch-card h4:first-child,
    .product__info .sketch-card h3:first-child,
    .product__info .sketch-card h4:first-child {
      margin-top: 0.5rem !important;
    }
    
    .formatted-content .sketch-card p:last-child,
    .product__info .sketch-card p:last-child {
      margin-bottom: 0.5rem !important;
    }
    
    /* REMOVED ALL .sketch-border CSS */
    
    /* Gold border for open ticket card - using CSS variable */
    /* REMOVED .sketch-card.seed-9 CSS */
    
    /* Quote card styles handled in theme.css */
    
    /* Quote background styles handled in theme.css */
    
    /* Mobile responsiveness - following pagina-base-funzionante pattern */
    @media (max-width: 768px) {
      .container,
      .page-width,
      .formatted-content {
        padding: 1rem !important;
      }
      
      h1 {
        font-size: 2rem !important;
      }
      
      h2 {
        font-size: 1.6rem !important;
      }
      
      h3 {
        font-size: 26px !important;
      }
      
      /* REMOVED mobile .sketch-card CSS */
      
      .price {
        font-size: 1.8rem !important;
      }
      
      .btn.product-form__cart-submit {
        font-size: 1rem !important;
        padding: 0.8rem 1.5rem !important;
      }
      
      /* Evey mobile layout - keep horizontal layout */
      .evey-override .evey__variant-container {
        flex-direction: row !important;
        justify-content: space-between !important;
        align-items: center !important;
        gap: 0.5rem !important;
      }
      
      .evey-override .evey__variant-name {
        font-size: 1rem !important;
      }

      /* Keep title and price together on left side */
      .evey-override .evey__variant-title,
      .open-variant-title {
        flex: 1 !important;
        display: flex !important;
        flex-direction: column !important;
        align-items: flex-start !important;
        gap: 0.2rem !important;
      }

      /* Quantity controls stay on right side */
      .evey-override .evey__variant_quantity,
      .open-variant-quantity,
      .open-quantity {
        flex-shrink: 0 !important;
        display: flex !important;
        align-items: center !important;
      }

      /* Mobile improvements for Open Ticket */
      .sketch-card {
        margin: 1rem 0 !important;
        padding: 1rem !important;
      }

      .open-ticket-container button {
        padding: 0.8rem 1.5rem !important;
        font-size: 1rem !important;
        min-height: 48px !important;
        border-radius: 6px !important;
      }

      /* Mobile quantity controls - match Evey exactly */
      .open-qty-btn {
        width: 45px !important;
        height: auto !important;
        flex-shrink: 0 !important;
        font-size: 1.8rem !important;
        cursor: pointer !important;
        display: flex !important;
        align-items: center !important;
        justify-content: center !important;
        color: rgb(var(--color-foreground)) !important;
        border: 0 !important;
        padding: 0 !important;
        background-color: transparent !important;
        box-shadow: inherit !important;
        text-transform: uppercase !important;
      }
      
      .open-qty-minus {
        margin-left: calc(var(--inputs-border-width)) !important;
      }
      
      .open-qty-plus {
        margin-right: calc(var(--inputs-border-width)) !important;
      }

      .open-quantity-input {
        width: 3rem !important;
        font-size: 16px !important; /* Prevent zoom on iOS */
      }

      /* Better mobile variant layout for Open Ticket - keep horizontal */
      .open-variant-container {
        flex-direction: row !important;
        justify-content: space-between !important;
        align-items: center !important;
        gap: 0.5rem !important;
        padding: 0.8rem 0 !important;
      }

      .open-variant-price {
        font-size: 1.2rem !important;
        font-weight: 600 !important;
        color: var(--christmas-gold) !important;
      }

      /* Improve mobile touch targets */
      .open-quantity {
        min-height: 44px !important;
        border-width: 1px !important;
        justify-content: center !important;
      }
    }

    /* Hide skip to product info and problematic elements */
    .skip-to-content-link {
      display: none !important;
    }
    
    /* Hide problematic slider list markers */
    .product__media-item.slider__slide::before {
      display: none !important;
    }
    
    /* Remove unwanted list markers without breaking Evey */
    .product__info ul:not([class*="evey"]):not([id*="evey"]), 
    .product__info ol:not([class*="evey"]):not([id*="evey"]) {
      list-style: none !important;
    }
    
    .product__info ul:not([class*="evey"]):not([id*="evey"])::before,
    .product__info ul:not([class*="evey"]):not([id*="evey"])::after,
    .product__info li:not([class*="evey"]):not([id*="evey"])::before,
    .product__info li:not([class*="evey"]):not([id*="evey"])::after {
      display: none !important;
    }
    
    /* Evey Events app buttons - EXCLUDING quantity buttons */
    .evey-btn,
    .evey-events button:not(.quantity__button),
    .evey-events .btn:not(.quantity__button),
    button[class*="evey"]:not(.quantity__button),
    [class*="evey"] button:not(.quantity__button),
    [id*="evey"] button:not(.quantity__button),
    [class*="Evey"] button:not(.quantity__button),
    .evey-ticket-selector button:not(.quantity__button) {
      background: #2e7d32 !important;
      color: white !important;
      border: 2px solid #2e7d32 !important;
      border-radius: 8px !important;
      padding: 0.75rem 1.5rem !important;
      font-weight: 600 !important;
      transition: all 0.3s ease !important;
      font-size: 1rem !important;
    }
    
    .evey-btn:hover,
    .evey-events button:not(.quantity__button):hover,
    .evey-events .btn:not(.quantity__button):hover,
    button[class*="evey"]:not(.quantity__button):hover,
    [class*="evey"] button:not(.quantity__button):hover,
    [id*="evey"] button:not(.quantity__button):hover,
    [class*="Evey"] button:not(.quantity__button):hover,
    .evey-ticket-selector button:not(.quantity__button):hover {
      background: #b91c1c !important;
      border-color: #b91c1c !important;
      transform: translateY(-2px) !important;
      box-shadow: 0 4px 12px rgba(220, 38, 38, 0.3) !important;
      transition: all 0.3s ease !important;
    }

    /* Open Ticket quantity button styles - match Evey exactly */
    .open-qty-btn {
      width: 45px;
      flex-shrink: 0;
      font-size: 1.8rem;
      border: 0;
      background-color: transparent;
      cursor: pointer;
      display: flex;
      align-items: center;
      justify-content: center;
      color: rgb(var(--color-foreground));
      padding: 0;
      box-shadow: inherit;
      text-transform: uppercase;
    }
    
    .open-qty-minus {
      margin-left: calc(var(--inputs-border-width));
    }
    
    .open-qty-plus {
      margin-right: calc(var(--inputs-border-width));
    }

    .open-qty-btn svg,
    .open-qty-btn .icon,
    .open-icon {
      width: 1rem !important;
      height: 1rem !important;
      pointer-events: none;
      fill: currentColor !important;
      stroke: currentColor !important;
    }
    
    .open-qty-btn svg path {
      fill: currentColor !important;
    }

    .open-quantity-input {
      color: currentColor;
      font-size: 1.6rem;
      font-weight: 500;
      opacity: 0.85;
      text-align: center;
      background-color: transparent;
      border: 0;
      padding: 0 0.5rem;
      width: 100%;
      flex-grow: 1;
      -webkit-appearance: none;
      appearance: none;
    }

    /* Remove automatic info icon from ALL evey variant names */
    .evey__variant-name::after {
      display: none !important;
      content: none !important;
    }

    /* Make Open Ticket button match Evey button width (not full width) */

    /* Desktop hover for tooltips - show on hover without click */
    @media (hover: hover) {
      .evey__variant-name:hover .evey-ticket-tooltip {
        opacity: 1 !important;
        transform: translateY(0) !important;
        pointer-events: auto !important;
        visibility: visible !important;
        display: block !important;
      }
      
      .evey__variant-name .evey-info-icon {
        pointer-events: none; /* Disable click on desktop, only hover works */
      }
    }
    
    /* Mobile - keep click behavior */
    @media (hover: none) {
      .evey__variant-name .evey-info-icon {
        pointer-events: auto; /* Enable click on mobile */
      }
    }
  </style>

  {%- style -%}
    .section-{{ section.id }}-padding {
      padding-top: {{ section.settings.padding_top | times: 0.75 | round: 0 }}px;
      padding-bottom: {{ section.settings.padding_bottom | times: 0.75 | round: 0 }}px;
    }

    @media screen and (min-width: 750px) {
      .section-{{ section.id }}-padding {
        padding-top: {{ section.settings.padding_top }}px;
        padding-bottom: {{ section.settings.padding_bottom }}px;
      }
    }
  {%- endstyle -%}

  <script src="{{ 'constants.js' | asset_url }}" defer="defer"></script>
  <script src="{{ 'pubsub.js' | asset_url }}" defer="defer"></script>
  <script src="{{ 'product-info.js' | asset_url }}" defer="defer"></script>
  <script src="{{ 'product-form.js' | asset_url }}" defer="defer"></script>
  {%- if product.quantity_price_breaks_configured? -%}
    <script src="{{ 'show-more.js' | asset_url }}" defer="defer"></script>
    <script src="{{ 'price-per-item.js' | asset_url }}" defer="defer"></script>
  {%- endif -%}

  {% if section.settings.image_zoom == 'hover' %}
    <script id="EnableZoomOnHover-main" src="{{ 'magnify.js' | asset_url }}" defer="defer"></script>
  {% endif %}
  {%- if request.design_mode -%}
    <script src="{{ 'theme-editor.js' | asset_url }}" defer="defer"></script>
  {%- endif -%}

  {%- assign first_3d_model = product.media | where: 'media_type', 'model' | first -%}
  {%- if first_3d_model -%}
    {{ 'component-product-model.css' | asset_url | stylesheet_tag }}
    <link
      id="ModelViewerStyle"
      rel="stylesheet"
      href="https://cdn.shopify.com/shopifycloud/model-viewer-ui/assets/v1.0/model-viewer-ui.css"
      media="print"
      onload="this.media='all'"
    >
    <link
      id="ModelViewerOverride"
      rel="stylesheet"
      href="{{ 'component-model-viewer-ui.css' | asset_url }}"
      media="print"
      onload="this.media='all'"
    >
  {%- endif -%}

  {% assign variant_images = product.images | where: 'attached_to_variant?', true | map: 'src' %}

  <div class="container">
  <div class="product product--{{ section.settings.media_size }} product--{{ section.settings.media_position }} product--{{ section.settings.gallery_layout }} product--mobile-{{ section.settings.mobile_thumbnails }} grid grid--1-col {% if product.media.size > 0 %}grid--2-col-tablet{% else %}product--no-media{% endif %}">
    <div class="grid__item product__media-wrapper{% if section.settings.media_position == 'right' %} medium-hide large-up-hide{% endif %}">
      {% if product.media.size > 0 %}
        <!-- Media gallery removed - hidden on mobile, not needed -->
      {% else %}
        <div class="product__media-placeholder" style="background: rgba(255,255,255,0.1); border: 2px dashed #2e7d32; border-radius: 12px; padding: 3rem; text-align: center; color: #2e7d32; min-height: 400px; display: flex; align-items: center; justify-content: center; flex-direction: column;">
          <svg width="64" height="64" viewBox="0 0 24 24" fill="none" stroke="#2e7d32" stroke-width="2">
            <rect x="3" y="3" width="18" height="18" rx="2" ry="2"/>
            <circle cx="8.5" cy="8.5" r="1.5"/>
            <polyline points="21,15 16,10 5,21"/>
          </svg>
          <p style="margin: 1rem 0 0 0; font-weight: 600;">Nessuna immagine disponibile</p>
        </div>
      {% endif %}
    </div>
    <div class="product__info-wrapper grid__item{% if settings.page_width > 1400 and section.settings.media_size == "small" %} product__info-wrapper--extra-padding{% endif %}{% if settings.animations_reveal_on_scroll %} scroll-trigger animate--slide-in{% endif %}">
      <product-info
        id="ProductInfo-{{ section.id }}"
        data-section="{{ section.id }}"
        data-url="{{ product.url }}"
        class="product__info-container{% if section.settings.enable_sticky_info %} product__column-sticky{% endif %}"
      >
        {%- assign product_form_id = 'product-form-' | append: section.id -%}

        {%- for block in section.blocks -%}
          {%- case block.type -%}
            {%- when '@app' -%}
              <div class="sketch-card evey-override" style="padding: 1.5rem; margin: 1.5rem 0;">
                <!-- Title and description inside Evey card for coherence -->
                <h3 style="color: var(--christmas-red); font-weight: 700; margin-bottom: 0.5rem; text-transform: uppercase;">Biglietti Parco</h3>
<p style="color: rgba(255,255,255,0.8); margin-bottom: 1.5rem; font-size: 19px;">Questi biglietti garantiscono l'accesso ad un giorno e una fascia oraria specifica.</p>                <!-- REMOVED sketch-border SVG -->
                <script>
                  
                  // Fix Evey disabled state and layout issues
                  function fixEveyLayout() {
                    
                    const eveyCard = document.querySelector('.sketch-card.evey-override');
                    if (!eveyCard) {
                      return;
                    }
                    
                    // Remove ALL inline styles that disable elements
                    const variantContainers = eveyCard.querySelectorAll('.evey__variant-container');
                    variantContainers.forEach((container, index) => {
                      
                      // Remove problematic inline styles
                      if (container.style.pointerEvents) {
                        container.style.pointerEvents = '';
                        container.style.opacity = '';
                        container.style.filter = '';
                        container.style.cursor = '';
                      }
                    });
                    
                    // Stabilize layout
                    const currentHeight = eveyCard.offsetHeight;
                    eveyCard.style.minHeight = Math.max(currentHeight, 300) + 'px';
                    
                    // Fix form
                    const eveyForm = eveyCard.querySelector('form, .evey__multi-variant-selector');
                    if (eveyForm) {
                      eveyForm.style.minHeight = '250px';
                      eveyForm.style.display = 'block';
                    }
                    
                    // Monitor for Evey changes
                    const observer = new MutationObserver(function(mutations) {
                      mutations.forEach(function(mutation) {
                        if (mutation.type === 'attributes' && mutation.attributeName === 'style') {
                          const target = mutation.target;
                          if (target.classList.contains('evey__variant-container')) {
                            if (target.style.pointerEvents === 'none') {
                              target.style.pointerEvents = '';
                              target.style.opacity = '';
                              target.style.filter = '';
                              target.style.cursor = '';
                            }
                          }
                        }
                      });
                    });
                    
                    // Observe all variant containers
                    variantContainers.forEach(container => {
                      observer.observe(container, {
                        attributes: true,
                        attributeFilter: ['style']
                      });
                    });
                    
                  }

                  
                  // Translate Evey buttons and add tooltips
                  function translateEveyButtons() {
                    const eveyCard = document.querySelector('.sketch-card.evey-override');
                    if (eveyCard) {
                      // Translate "Add to Cart" to Italian
                      const addToCartButtons = eveyCard.querySelectorAll('button, input[type="submit"]');
                      addToCartButtons.forEach(btn => {
                        if (btn.textContent && btn.textContent.toLowerCase().includes('add to cart')) {
                          btn.textContent = 'AGGIUNGI AL CARRELLO';
                        }
                        if (btn.value && btn.value.toLowerCase().includes('add to cart')) {
                          btn.value = 'AGGIUNGI AL CARRELLO';
                        }
                      });
                      
                      // Force uppercase on all Evey buttons
                      const allButtons = eveyCard.querySelectorAll('button, input[type="submit"]');
                      allButtons.forEach(btn => {
                        btn.style.textTransform = 'uppercase';
                      });

                      // Add tooltips ONLY to specific variants that need them
                      const variantNames = eveyCard.querySelectorAll('.evey__variant-name, [class*="variant"] [class*="name"]');
                      variantNames.forEach(nameEl => {
                        const text = nameEl.textContent.toLowerCase();
                        
                        // Remove ALL existing info icons and tooltips first to prevent duplicates
                        const allIconsAndTooltips = nameEl.querySelectorAll('span, .evey-ticket-tooltip, .ticket-tooltip');
                        allIconsAndTooltips.forEach(el => {
                          if (el.innerHTML && el.innerHTML.includes('ⓘ')) {
                            el.remove();
                          }
                          if (el.classList && (el.classList.contains('evey-ticket-tooltip') || el.classList.contains('ticket-tooltip'))) {
                            el.remove();
                          }
                        });
                        
                        let tooltipContent = '';
                        // ONLY add tooltips for ridotti and saltafila
                        if (text.includes('ridott') || text.includes('bambini') || text.includes('disabil')) {
                          tooltipContent = `<strong style="color: var(--christmas-gold);">BIGLIETTI RIDOTTI</strong><br>
                            • Ingresso Gratuito per bambini fino ai 2 anni<br>
                            • Per bambini dai 3 ai 12 anni e disabili<br>
                            • Documentazione richiesta all'ingresso<br><br>
                            <strong style="color: var(--christmas-gold);">DISABILI:</strong><br>
                            • Ha diritto al biglietto ridotto anche 1 accompagnatore per disabile<br>
                            • Accesso prioritario tramite ingresso separato`;
                        } else if (text.includes('saltafila') || text.includes('salt')) {
                          tooltipContent = `<strong style="color: var(--christmas-gold);">BIGLIETTO SALTAFILA</strong><br>
                            • Salta-fila all'ingresso del parco<br>
                            • Nel giorno e nella fascia oraria selezionata<br>
                            • Ideale nei weekend`;
                        }

                        if (tooltipContent) {
                          // Add info icon and tooltip ONLY if there's content
                          const infoIcon = document.createElement('span');
                          infoIcon.className = 'evey-info-icon';
                          infoIcon.innerHTML = 'ⓘ';
                          infoIcon.style.cssText = 'display: inline-block; margin-left: 8px; cursor: help; color: var(--christmas-gold); font-size: 14px; opacity: 0.8;';
                          
                          const tooltip = document.createElement('div');
                          tooltip.className = 'evey-ticket-tooltip';
                          tooltip.innerHTML = tooltipContent;
                          tooltip.style.cssText = `position: absolute; top: 100%; left: 0; background: rgba(0, 0, 0, 0.95); color: white; padding: 0.8rem; border-radius: 6px; font-size: 16px; line-height: 1.4; width: 280px; z-index: 999; opacity: 0; transform: translateY(-10px); transition: all 0.3s ease; pointer-events: none; box-shadow: 0 4px 12px rgba(0, 0, 0, 0.3);`;
                          
                          // Make parent relative if not already
                          if (nameEl.style.position !== 'relative') {
                            nameEl.style.position = 'relative';
                          }
                          
                          nameEl.appendChild(infoIcon);
                          nameEl.appendChild(tooltip);
                          
                          // Add event listeners
                          infoIcon.addEventListener('mouseenter', () => {
                            tooltip.style.opacity = '1';
                            tooltip.style.transform = 'translateY(0)';
                            tooltip.style.pointerEvents = 'auto';
                          });
                          
                          infoIcon.addEventListener('mouseleave', () => {
                            tooltip.style.opacity = '0';
                            tooltip.style.transform = 'translateY(-10px)';
                            tooltip.style.pointerEvents = 'none';
                          });
                          
                          infoIcon.addEventListener('click', (e) => {
                            e.preventDefault();
                            const isVisible = tooltip.style.opacity === '1';
                            tooltip.style.opacity = isVisible ? '0' : '1';
                            tooltip.style.transform = isVisible ? 'translateY(-10px)' : 'translateY(0)';
                            tooltip.style.pointerEvents = isVisible ? 'none' : 'auto';
                          });
                        }
                      });

                      // Add warning for cart button when no date selected
                      const cartButtons = eveyCard.querySelectorAll('button[type="submit"], input[type="submit"], .button--secondary');
                      cartButtons.forEach(btn => {
                        if (btn.id !== 'open-add-to-cart') { // Skip Open Ticket button
                          btn.addEventListener('mouseenter', function() {
                            // Check if button is disabled - that means NO DATE is selected
                            // Evey disables the button when no date is selected, regardless of ticket quantity
                            const noDateSelected = btn.disabled || btn.classList.contains('disabled');
                            
                            
                            // Show warning when NO DATE is selected
                            if (noDateSelected) {
                              
                              // Show warning tooltip - OUTSIDE THE BUTTON
                              let warningTooltip = document.getElementById('date-warning-tooltip-global');
                              if (!warningTooltip) {
                                warningTooltip = document.createElement('div');
                                warningTooltip.id = 'date-warning-tooltip-global';
                                warningTooltip.className = 'date-warning-tooltip';
                                
                                // Add to body, not to button
                                document.body.appendChild(warningTooltip);
                              } else {
                              }
                              
                              // Position tooltip relative to button
                              if (warningTooltip) {
                                const btnRect = btn.getBoundingClientRect();
                                warningTooltip.style.cssText = `
                                  position: fixed !important; 
                                  top: ${btnRect.top - 60}px !important; 
                                  left: ${btnRect.left + (btnRect.width / 2)}px !important; 
                                  transform: translateX(-50%) !important; 
                                  background: rgb(220, 38, 38) !important; 
                                  color: white !important; 
                                  padding: 0.8rem 1.2rem !important; 
                                  border-radius: 8px !important; 
                                  font-family: 'Providence Sans', -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif !important;
                                  font-size: 16px !important; 
                                  font-weight: 400 !important;
                                  white-space: normal !important; 
                                  max-width: 280px !important;
                                  width: max-content !important;
                                  text-align: center !important;
                                  line-height: 1.4 !important;
                                  z-index: 9959 !important; 
                                  opacity: 1 !important; 
                                  visibility: visible !important;
                                  display: block !important;
                                  pointer-events: none !important; 
                                  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.5) !important;
                                `;
                                
                                // Log actual computed styles
                                const computed = window.getComputedStyle(warningTooltip);
                              }
                            } else {
                            }
                          });
                          
                          btn.addEventListener('mouseleave', function() {
                            const warningTooltip = document.getElementById('date-warning-tooltip-global');
                            if (warningTooltip) {
                              warningTooltip.style.display = 'none';
                            }
                          });
                        }
                      });
                    }
                  }

                  // Run immediately and after delays
                  document.addEventListener('DOMContentLoaded', function() {
                    fixEveyLayout();
                    translateEveyButtons();
                  });
                  window.addEventListener('load', function() {
                    fixEveyLayout();
                    translateEveyButtons();
                  });
                  setTimeout(() => { fixEveyLayout(); translateEveyButtons(); }, 1000);
                  setTimeout(() => { fixEveyLayout(); translateEveyButtons(); }, 2000);
                  setTimeout(() => { fixEveyLayout(); translateEveyButtons(); }, 3000);
                  
                  // Monitor for dynamic content changes - but run less frequently to avoid duplicates
                  setInterval(translateEveyButtons, 5000);
                </script>
                {% render block %}
              </div>
            {%- when 'shopify://apps/evey-events-tickets/blocks/multi-variant-selector/0ff19eb4-83c2-40c2-b780-a501fc99b6d8' -%}
              <div class="sketch-card evey-override" style="padding: 1.5rem; margin: 1.5rem 0;">
                <!-- Title and description inside Evey card for coherence -->
                <h3 style="color: var(--christmas-red); font-weight: 700; margin-bottom: 0.5rem; text-transform: uppercase;">Biglietti Parco</h3>
                {% render block %}
              </div>
            {%- when 'text' -%}
              <p
                class="product__text inline-richtext{% if block.settings.text_style == 'uppercase' %} caption-with-letter-spacing{% elsif block.settings.text_style == 'subtitle' %} subtitle{% endif %}"
                {{ block.shopify_attributes }}
              >
                {{- block.settings.text -}}
              </p>
            {%- when 'title' -%}
              <div class="product__title formatted-content" {{ block.shopify_attributes }}>
                <h1>{{ product.title | escape }}</h1>
              </div>

            <!-- MultiVariants app code start [ https://apps.shopify.com/multivariants ] -->
	<div id="MULTIVARIANTS_APP_SECTION_PLACE"></div><script type="text/javascript" src="https://sapp.multivariants.com/gate/out/sys/js/init.js?shop=lucine-di-natale.myshopify.com&product_id={{product.id}}&locale={{shop.locale}}"></script>
<!-- MultiVariants App code end --> 
            
            {%- when 'price' -%}
              <div class="sketch-card" style="padding: 1.5rem; margin: 1.5rem 0;">
                <!-- REMOVED price sketch-border SVG -->
                <div class="no-js-hidden" id="price-{{ section.id }}" role="status" {{ block.shopify_attributes }}>
                  {%- render 'price',
                    product: product,
                    use_variant: true,
                    show_badges: true,
                    price_class: 'price--large'
                  -%}
                </div>
              </div>
              {%- if product.quantity_price_breaks_configured? -%}
                <div class="volume-pricing-note">
                  <span>{{ 'products.product.volume_pricing.note' | t }}</span>
                </div>
              {%- endif -%}
                <div class="product__tax caption rte" style="display: none;">
                  {%- if cart.taxes_included -%}
                    {{ 'products.product.include_taxes' | t }}
                  {%- endif -%}
                  {%- if shop.shipping_policy.body != blank -%}
                    {{ 'products.product.shipping_policy_html' | t: link: shop.shipping_policy.url }}
                  {%- endif -%}
                </div>
              <div {{ block.shopify_attributes }}>
                {%- assign product_form_installment_id = 'product-form-installment-' | append: section.id -%}
                {%- form 'product', product, id: product_form_installment_id, class: 'installment caption-large' -%}
                  <input type="hidden" name="id" value="{{ product.selected_or_first_available_variant.id }}">
                  {{ form | payment_terms }}
                {%- endform -%}
              </div>
            {%- when 'inventory' -%}
              <p
                class="product__inventory no-js-hidden{% if block.settings.text_style == 'uppercase' %} caption-with-letter-spacing{% elsif block.settings.text_style == 'subtitle' %} subtitle{% endif %}{% if product.selected_or_first_available_variant.inventory_management != 'shopify' %} visibility-hidden{% endif %}"
                {{ block.shopify_attributes }}
                id="Inventory-{{ section.id }}"
                role="status"
              >
                {%- if product.selected_or_first_available_variant.inventory_management == 'shopify' -%}
                  {%- if product.selected_or_first_available_variant.inventory_quantity > 0 -%}
                    {%- if product.selected_or_first_available_variant.inventory_quantity <= block.settings.inventory_threshold -%}
                      <svg width="15" height="15" aria-hidden="true">
                        <circle cx="7.5" cy="7.5" r="7.5" fill="rgb(238,148,65, 0.3)"/>
                        <circle cx="7.5" cy="7.5" r="5" stroke="rgb(255, 255, 255)" stroke-width="1" fill="rgb(238,148,65)"/>
                      </svg>
                      {%- if block.settings.show_inventory_quantity -%}
                        {{- 'products.product.inventory_low_stock_show_count' | t: quantity: product.selected_or_first_available_variant.inventory_quantity -}}
                      {%- else -%}
                        {{- 'products.product.inventory_low_stock' | t -}}
                      {%- endif -%}
                    {%- else -%}
                      <svg width="15" height="15" aria-hidden="true">
                        <circle cx="7.5" cy="7.5" r="7.5" fill="rgb(62,214,96, 0.3)"/>
                        <circle cx="7.5" cy="7.5" r="5" stroke="rgb(255, 255, 255)" stroke-width="1" fill="rgb(62,214,96)"/>
                      </svg>
                      {%- if block.settings.show_inventory_quantity -%}
                        {{- 'products.product.inventory_in_stock_show_count' | t: quantity: product.selected_or_first_available_variant.inventory_quantity -}}
                      {%- else -%}
                          {{- 'products.product.inventory_in_stock' | t -}}
                      {%- endif -%}
                    {%- endif -%}
                  {%- else -%}
                    {%- if product.selected_or_first_available_variant.inventory_policy == 'continue' -%}
                      <svg width="15" height="15" aria-hidden="true">
                        <circle cx="7.5" cy="7.5" r="7.5" fill="rgb(62,214,96, 0.3)"/>
                        <circle cx="7.5" cy="7.5" r="5" stroke="rgb(255, 255, 255)" stroke-width="1" fill="rgb(62,214,96)"/>
                      </svg>
                      {{- 'products.product.inventory_out_of_stock_continue_selling' | t -}}
                    {%- else -%}
                      <svg width="15" height="15" aria-hidden="true">
                        <circle cx="7.5" cy="7.5" r="7.5" fill="rgb(200,200,200, 0.3)"/>
                        <circle cx="7.5" cy="7.5" r="5" stroke="rgb(255, 255, 255)" stroke-width="1" fill="rgb(200,200,200)"/>
                      </svg>
                      {{- 'products.product.inventory_out_of_stock' | t -}}
                    {%- endif -%}
                  {%- endif -%}
                {%- endif -%}
              </p>

            
            
            {%- when 'description' -%}
              {%- if product.description != blank -%}
                <div class="product__description rte quick-add-hidden" {{ block.shopify_attributes }}>
                  {{ product.description }}
                </div>
              {%- endif -%}
            {%- when 'sku' -%}
              <p
                class="product__sku no-js-hidden{% if block.settings.text_style == 'uppercase' %} caption-with-letter-spacing{% elsif block.settings.text_style == 'subtitle' %} subtitle{% endif %}{% if product.selected_or_first_available_variant.sku.size == 0 %} visibility-hidden{% endif %}"
                id="Sku-{{ section.id }}"
                role="status"
                {{ block.shopify_attributes }}
              >
                <span class="visually-hidden">{{ 'products.product.sku' | t }}:</span> {{- product.selected_or_first_available_variant.sku -}}
              </p>
            {%- when 'custom_liquid' -%}
              {{ block.settings.custom_liquid }}
            {%- when 'collapsible_tab' -%}
              <div class="product__accordion accordion quick-add-hidden" {{ block.shopify_attributes }}>
                <details id="Details-{{ block.id }}-{{ section.id }}">
                  <summary>
                    <div class="summary__title">
                      {% render 'icon-accordion', icon: block.settings.icon %}
                      <h2 class="h4 accordion__title inline-richtext">
                        {{ block.settings.heading | default: block.settings.page.title }}
                      </h2>
                    </div>
                    {% render 'icon-caret' %}
                  </summary>
                  <div class="accordion__content rte" id="ProductAccordion-{{ block.id }}-{{ section.id }}">
                    {{ block.settings.content }}
                    {{ block.settings.page.content }}
                  </div>
                </details>
              </div>
            {%- when 'quantity_selector' -%}
              <div
                id="Quantity-Form-{{ section.id }}"
                class="product-form__input product-form__quantity{% if settings.inputs_shadow_vertical_offset != 0 and settings.inputs_shadow_vertical_offset < 0 %} product-form__quantity-top{% endif %}"
                {{ block.shopify_attributes }}
              >
                {% comment %} TODO: enable theme-check once `item_count_for_variant` is accepted as valid filter {% endcomment %}
                {% # theme-check-disable %}
                {%- assign cart_qty = cart | item_count_for_variant: product.selected_or_first_available_variant.id -%}
                {% # theme-check-enable %}
                <label class="quantity__label form__label multivariants_hide_elements" for="Quantity-{{ section.id }}">
                  {{ 'products.product.quantity.label' | t }}
                  <span class="quantity__rules-cart no-js-hidden{% if cart_qty == 0 %} hidden{% endif %}">
                    <span class="loading-overlay hidden">
                      <span class="loading-overlay__spinner">
                        <svg
                          aria-hidden="true"
                          focusable="false"
                          class="spinner"
                          viewBox="0 0 66 66"
                          xmlns="http://www.w3.org/2000/svg"
                        >
                          <circle class="path" fill="none" stroke-width="6" cx="33" cy="33" r="30"></circle>
                        </svg>
                      </span>
                    </span>
                    <span>({{- 'products.product.quantity.in_cart_html' | t: quantity: cart_qty -}})</span>
                  </span>
                </label>
                <div class="price-per-item__container multivariants_hide_elements">
                  <quantity-input class="quantity" data-url="{{ product.url }}" data-section="{{ section.id }}">
                    <button class="quantity__button no-js-hidden" name="minus" type="button">
                      <span class="visually-hidden">
                        {{- 'products.product.quantity.decrease' | t: product: product.title | escape -}}
                      </span>
                      {% render 'icon-minus' %}
                    </button>
                    <input
                      class="quantity__input"
                      type="number"
                      name="quantity"
                      id="Quantity-{{ section.id }}"
                      data-cart-quantity="{{ cart_qty }}"
                      data-min="{{ product.selected_or_first_available_variant.quantity_rule.min }}"
                      min="{{ product.selected_or_first_available_variant.quantity_rule.min }}"
                      {% if product.selected_or_first_available_variant.quantity_rule.max != null %}
                        data-max="{{ product.selected_or_first_available_variant.quantity_rule.max }}"
                        max="{{ product.selected_or_first_available_variant.quantity_rule.max }}"
                      {% endif %}
                      step="{{ product.selected_or_first_available_variant.quantity_rule.increment }}"
                      value="{{ product.selected_or_first_available_variant.quantity_rule.min }}"
                      form="{{ product_form_id }}"
                    />
                    <button class="quantity__button no-js-hidden" name="plus" type="button">
                      <span class="visually-hidden">
                        {{- 'products.product.quantity.increase' | t: product: product.title | escape -}}
                      </span>
                      {% render 'icon-plus' %}
                    </button>
                  </quantity-input>
                  {%- liquid
                    assign volume_pricing_array = product.selected_or_first_available_variant.quantity_price_breaks | sort: 'quantity' | reverse
                    assign current_qty_for_volume_pricing = cart_qty | plus: product.selected_or_first_available_variant.quantity_rule.min
                    if cart_qty > 0
                      assign current_qty_for_volume_pricing = cart_qty | plus: product.selected_or_first_available_variant.quantity_rule.increment
                    endif

                  -%}
                  {%- if product.quantity_price_breaks_configured? -%}
                    <price-per-item class="no-js-hidden" id="Price-Per-Item-{{ section.id }}" data-section-id="{{ section.id }}" data-variant-id="{{ product.selected_or_first_available_variant.id }}">
                      {%- if product.selected_or_first_available_variant.quantity_price_breaks.size > 0 -%}
                        {%- assign variant_price_compare = product.selected_or_first_available_variant.compare_at_price -%}
                        <div class="price-per-item">
                          {%- if variant_price_compare -%}
                            <dl class="price-per-item--current">
                              <dt class="visually-hidden">
                                {{ 'products.product.price.regular_price' | t }}
                              </dt>
                              <dd>
                                <s class="variant-item__old-price">
                                  {{ variant_price_compare | money_with_currency }}
                                </s>
                              </dd>
                            </dl>
                          {%- endif -%}
                          {%- if current_qty_for_volume_pricing < volume_pricing_array.last.minimum_quantity -%}
                            {%- assign variant_price = product.selected_or_first_available_variant.price | money_with_currency -%}
                            <span class="price-per-item--current">{{ 'products.product.volume_pricing.price_at_each' | t: price: variant_price }}</span>
                          {%- else -%}
                            {%- for price_break in volume_pricing_array -%}
                              {%- if current_qty_for_volume_pricing >= price_break.minimum_quantity -%}
                                {%- assign price_break_price = price_break.price | money_with_currency -%}
                                <span class="price-per-item--current">{{ 'products.product.volume_pricing.price_at_each' | t: price: price_break_price }}</span>
                                {%- break -%}
                              {%- endif -%}
                            {%- endfor -%}
                          {%- endif -%}
                        </div>
                      {%- else -%}
                        {%- assign variant_price = product.selected_or_first_available_variant.price | money_with_currency -%}
                        {%- assign variant_price_compare = product.selected_or_first_available_variant.compare_at_price -%}
                        <div class="price-per-item">
                          {%- if variant_price_compare -%}
                            <dl class="price-per-item--current">
                              <dt class="visually-hidden">
                                {{ 'products.product.price.regular_price' | t }}
                              </dt>
                              <dd>
                                <s class="variant-item__old-price">
                                  {{ variant_price_compare | money_with_currency }}
                                </s>
                              </dd>
                              <dt class="visually-hidden">
                                {{ 'products.product.price.sale_price' | t }}
                              </dt>
                              <dd>
                                <span class="price-per-item--current">{{ 'products.product.volume_pricing.price_at_each' | t: price: variant_price }}</span>
                              </dd>
                            </dl>
                          {%- else -%}
                            <span class="price-per-item--current">{{ 'products.product.volume_pricing.price_at_each' | t: price: variant_price }}</span>
                          {%- endif -%}
                        </div>
                      {%- endif -%}
                    </price-per-item>
                  {%- endif -%}
                </div>
                <div class="quantity__rules caption no-js-hidden">
                  {%- if product.selected_or_first_available_variant.quantity_rule.increment > 1 -%}
                    <span class="divider">
                      {{-
                        'products.product.quantity.multiples_of'
                        | t: quantity: product.selected_or_first_available_variant.quantity_rule.increment
                      -}}
                    </span>
                  {%- endif -%}
                  {%- if product.selected_or_first_available_variant.quantity_rule.min > 1 -%}
                    <span class="divider">
                      {{-
                        'products.product.quantity.minimum_of'
                        | t: quantity: product.selected_or_first_available_variant.quantity_rule.min
                      -}}
                    </span>
                  {%- endif -%}
                  {%- if product.selected_or_first_available_variant.quantity_rule.max != null -%}
                    <span class="divider">
                      {{-
                        'products.product.quantity.maximum_of'
                        | t: quantity: product.selected_or_first_available_variant.quantity_rule.max
                      -}}
                    </span>
                  {%- endif -%}
                </div>
                {%- if product.quantity_price_breaks_configured? -%}
                  <volume-pricing class="parent-display no-js-hidden" id="Volume-{{ section.id }}">
                    {%- if product.selected_or_first_available_variant.quantity_price_breaks.size > 0 -%}
                      <span class="caption-large">{{ 'products.product.volume_pricing.title' | t }}</span>
                      <ul class="list-unstyled no-js-hidden">
                        <li>
                          <span>{{ product.selected_or_first_available_variant.quantity_rule.min }}+</span>
                          {%- assign price = product.selected_or_first_available_variant.price | money_with_currency -%}
                          <span data-text="{{ 'products.product.volume_pricing.price_at_each' | t: price: variant_price }}">{{ 'sections.quick_order_list.each' | t: money: price }}</span>
                        </li>
                        {%- for price_break in product.selected_or_first_available_variant.quantity_price_breaks -%}
                          {%- assign price_break_price = price_break.price | money_with_currency -%}
                          <li class="{%- if forloop.index >= 3 -%}show-more-item hidden{%- endif -%}">
                            <span>{{ price_break.minimum_quantity }}<span aria-hidden="true">+</span></span>
                            <span data-text="{{ 'products.product.volume_pricing.price_at_each' | t: price: price_break_price }}">{{ 'sections.quick_order_list.each' | t: money: price_break_price }}</span>
                          </li>
                        {%- endfor -%}
                      </ul>
                      {%- if product.selected_or_first_available_variant.quantity_price_breaks.size >= 3 -%}
                        <show-more-button>
                          <button
                            class="button-show-more link underlined-link"
                            id="Show-More-{{ section.id }}"
                            type="button"
                          >
                            <span class="label-show-more label-text"
                              ><span aria-hidden="true">+ </span>{{ 'products.facets.show_more' | t }}
                            </span>
                          </button>
                        </show-more-button>
                    {%- endif -%}
                  {%- endif -%}
                  </volume-pricing>
                {%- endif -%}
              </div>
            {%- when 'popup' -%}
              <modal-opener
                class="product-popup-modal__opener no-js-hidden quick-add-hidden"
                data-modal="#PopupModal-{{ block.id }}"
                {{ block.shopify_attributes }}
              >
                <button
                  id="ProductPopup-{{ block.id }}"
                  class="product-popup-modal__button link"
                  type="button"
                  aria-haspopup="dialog"
                >
                  {{ block.settings.text | default: block.settings.page.title }}
                </button>
              </modal-opener>
              <a href="{{ block.settings.page.url }}" class="product-popup-modal__button link no-js">
                {{- block.settings.text -}}
              </a>
            {%- when 'share' -%}
              {% assign share_url = product.selected_variant.url | default: product.url | prepend: request.origin %}
              {% render 'share-button',
                block: block,
                share_link: share_url
              %}

            {%- when 'variant_picker' -%}
              {% render 'product-variant-picker', product: product, block: block, product_form_id: product_form_id %}
            {%- when 'buy_buttons' -%}
              <div class="sketch-card" style="padding: 1.5rem; margin: 1.5rem 0;">
                <!-- REMOVED buy-buttons sketch-border SVG -->
                {%- render 'buy-buttons', block: block, product: product, product_form_id: product_form_id, section_id: section.id, show_pickup_availability: true -%}
              </div>
            {%- when 'rating' -%}
              {%- if product.metafields.reviews.rating.value != blank -%}
                {% liquid
                  assign rating_decimal = 0
                  assign decimal = product.metafields.reviews.rating.value.rating | modulo: 1
                  if decimal >= 0.3 and decimal <= 0.7
                    assign rating_decimal = 0.5
                  elsif decimal > 0.7
                    assign rating_decimal = 1
                  endif
                %}
                <div
                  class="rating"
                  role="img"
                  aria-label="{{ 'accessibility.star_reviews_info' | t: rating_value: product.metafields.reviews.rating.value, rating_max: product.metafields.reviews.rating.value.scale_max }}"
                >
                  <span
                    aria-hidden="true"
                    class="rating-star"
                    style="--rating: {{ product.metafields.reviews.rating.value.rating | floor }}; --rating-max: {{ product.metafields.reviews.rating.value.scale_max }}; --rating-decimal: {{ rating_decimal }};"
                  ></span>
                </div>
                <p class="rating-text caption">
                  <span aria-hidden="true">
                    {{- product.metafields.reviews.rating.value }} /
                    {{ product.metafields.reviews.rating.value.scale_max -}}
                  </span>
                </p>
                <p class="rating-count caption">
                  <span aria-hidden="true">({{ product.metafields.reviews.rating_count }})</span>
                  <span class="visually-hidden">
                    {{- product.metafields.reviews.rating_count }}
                    {{ 'accessibility.total_reviews' | t -}}
                  </span>
                </p>
              {%- endif -%}
            {%- when 'complementary' -%}
              <product-recommendations class="complementary-products quick-add-hidden no-js-hidden{% if block.settings.make_collapsible_row %} is-accordion{% endif %}{% if block.settings.enable_quick_add %} complementary-products-contains-quick-add{% endif %}" data-url="{{ routes.product_recommendations_url }}?section_id={{ section.id }}&product_id={{ product.id }}&limit={{ block.settings.product_list_limit }}&intent=complementary">
                {%- if recommendations.performed and recommendations.products_count > 0 -%}
                  <aside aria-label="{{ 'accessibility.complementary_products' | t }}" {{ block.shopify_attributes }}{% if block.settings.make_collapsible_row %} class="product__accordion accordion"{% endif %}>
                    <div class="complementary-products__container">
                      {%- if block.settings.make_collapsible_row -%}
                        <details id="Details-{{ block.id }}-{{ section.id }}" open>
                          <summary>
                      {%- endif %}
                      <div class="summary__title">
                        {%- if block.settings.make_collapsible_row -%}
                          {% render 'icon-accordion', icon: block.settings.icon %}
                          <h2 class="h4 accordion__title">{{ block.settings.block_heading }}</h2>
                        {%- else -%}
                          <h2 class="h3 accordion__title">{{ block.settings.block_heading }}</h2>
                        {%- endif -%}
                      </div>
                      {%- if block.settings.make_collapsible_row -%}
                          {% render 'icon-caret' %}
                        </summary>
                      {%- endif -%}
                      <slideshow-component class="slider-mobile-gutter">
                        {%- assign number_of_slides = recommendations.products_count | plus: 0.0 | divided_by: block.settings.products_per_page | ceil -%}
                        <div id="Slider-{{ block.id }}" class="contains-card contains-card--product complementary-slider grid grid--1-col slider slider--everywhere" role="list"{% if number_of_slides > 1 %} aria-label="{{ 'general.slider.name' | t }}"{% endif %}>
                          {%- for i in (1..number_of_slides) -%}
                            <div id="Slide-{{ block.id }}-{{ forloop.index }}" class="complementary-slide complementary-slide--{{ settings.card_style }} grid__item slider__slide slideshow__slide" tabindex="-1" role="group"{% if number_of_slides > 1 %} aria-roledescription="{{ 'sections.slideshow.slide' | t }}" aria-label="{{ forloop.index }} {{ 'general.slider.of' | t }} {{ forloop.length }}"{% endif %}>
                              <ul class="list-unstyled" role="list">
                                {%- for product in recommendations.products limit: block.settings.products_per_page offset: continue -%}
                                  <li>
                                    {% render 'card-product',
                                      card_product: product,
                                      media_aspect_ratio: block.settings.image_ratio,
                                      show_secondary_image: false,
                                      lazy_load: false,
                                      show_quick_add: block.settings.enable_quick_add,
                                      section_id: section.id,
                                      horizontal_class: true,
                                      horizontal_quick_add: true
                                    %}
                                  </li>
                                {%- endfor -%}
                              </ul>
                            </div>
                          {%- endfor -%}
                        </div>
                        {%- if number_of_slides > 1 -%}
                          <div class="slider-buttons no-js-hidden">
                            <button type="button" class="slider-button slider-button--prev" name="previous" aria-label="{{ 'general.slider.previous_slide' | t }}">{% render 'icon-caret' %}</button>
                            <div class="slider-counter slider-counter--{{ block.settings.pagination_style }}{% if block.settings.pagination_style == 'counter' or block.settings.pagination_style == 'numbers' %} caption{% endif %}">
                              {%- if block.settings.pagination_style == 'counter' -%}
                                <span class="slider-counter--current">1</span>
                                <span aria-hidden="true"> / </span>
                                <span class="visually-hidden">{{ 'general.slider.of' | t }}</span>
                                <span class="slider-counter--total">{{ number_of_slides }}</span>
                              {%- else -%}
                                <div class="slideshow__control-wrapper">
                                  {%- for i in (1..number_of_slides) -%}
                                    <button class="slider-counter__link slider-counter__link--{{ block.settings.pagination_style }} link" aria-label="{{ 'sections.slideshow.load_slide' | t }} {{ forloop.index }} {{ 'general.slider.of' | t }} {{ forloop.length }}" aria-controls="Slider-{{ block.id }}">
                                      {%- if block.settings.pagination_style == 'numbers' -%}{{ forloop.index }}{% else %}<span class="dot"></span>{%- endif -%}
                                    </button>
                                  {%- endfor -%}
                                </div>
                              {%- endif -%}
                            </div>
                            <button type="button" class="slider-button slider-button--next" name="next" aria-label="{{ 'general.slider.next_slide' | t }}">{% render 'icon-caret' %}</button>
                          </div>
                        {%- endif -%}
                      </slideshow-component>
                      {%- if block.settings.make_collapsible_row -%}
                        </details>
                      {%- endif -%}
                    </div>
                  </aside>
                {%- endif -%}
                {{ 'component-card.css' | asset_url | stylesheet_tag }}
                {{ 'component-complementary-products.css' | asset_url | stylesheet_tag }}
                {%- if block.settings.enable_quick_add -%}
                  {{ 'quick-add.css' | asset_url | stylesheet_tag }}
                  <script src="{{ 'quick-add.js' | asset_url }}" defer="defer"></script>
                {%- endif -%}
              </product-recommendations>
            {%- when 'icon-with-text' -%}
              {% render 'icon-with-text',
                block: block
              %}
          {%- endcase -%}
        {%- endfor -%}
        <a href="{{ product.url }}" class="link product__view-details animate-arrow">
          {{ 'products.product.view_full_details' | t }}
          {% render 'icon-arrow' %}
        </a>
      </product-info>
    </div>
    {%- if section.settings.media_position == 'right' -%}
      {% comment %} Duplicate gallery removed - not needed {% endcomment %}
    {%- endif -%}
  </div>
  </div>

  <!-- Product media modal removed - not needed -->

  {% assign popups = section.blocks | where: 'type', 'popup' %}
  {%- for block in popups -%}
    <modal-dialog id="PopupModal-{{ block.id }}" class="product-popup-modal" {{ block.shopify_attributes }}>
      <div
        role="dialog"
        aria-label="{{ block.settings.text }}"
        aria-modal="true"
        class="product-popup-modal__content"
        tabindex="-1"
      >
        <button
          id="ModalClose-{{ block.id }}"
          type="button"
          class="product-popup-modal__toggle"
          aria-label="{{ 'accessibility.close' | t }}"
        >
          {% render 'icon-close' %}
        </button>
        <div class="product-popup-modal__content-info">
          <h1 class="h2">{{ block.settings.page.title }}</h1>
          {{ block.settings.page.content }}
        </div>
      </div>
    </modal-dialog>
  {%- endfor -%}

  {%- if product.media.size > 0 -%}
    <script src="{{ 'product-modal.js' | asset_url }}" defer="defer"></script>
    <script src="{{ 'media-gallery.js' | asset_url }}" defer="defer"></script>
  {%- endif -%}

  {%- if first_3d_model -%}
    <script type="application/json" id="ProductJSON-{{ product.id }}">
      {{ product.media | where: 'media_type', 'model' | json }}
    </script>
    <script src="{{ 'product-model.js' | asset_url }}" defer></script>
  {%- endif -%}

  <script>
    document.addEventListener('DOMContentLoaded', function () {
      function isIE() {
        const ua = window.navigator.userAgent;
        const msie = ua.indexOf('MSIE ');
        const trident = ua.indexOf('Trident/');

        return msie > 0 || trident > 0;
      }

      if (!isIE()) return;
      const hiddenInput = document.querySelector('#{{ product_form_id }} input[name="id"]');
      const noScriptInputWrapper = document.createElement('div');
      const variantSwitcher =
        document.querySelector('variant-radios[data-section="{{ section.id }}"]') ||
        document.querySelector('variant-selects[data-section="{{ section.id }}"]');
      noScriptInputWrapper.innerHTML = document.querySelector(
        '.product-form__noscript-wrapper-{{ section.id }}'
      ).textContent;
      variantSwitcher.outerHTML = noScriptInputWrapper.outerHTML;

      document.querySelector('#Variants-{{ section.id }}').addEventListener('change', function (event) {
        hiddenInput.value = event.currentTarget.value;
      });
    });
  </script>

  {%- liquid
    if product.selected_or_first_available_variant.featured_media
      assign seo_media = product.selected_or_first_available_variant.featured_media
    else
      assign seo_media = product.featured_media
    endif
  -%}

  <script type="application/ld+json">
    {
      "@context": "http://schema.org/",
      "@type": "Product",
      "name": {{ product.title | json }},
      "url": {{ request.origin | append: product.url | json }},
      {% if seo_media -%}
        "image": [
          {{ seo_media | image_url: width: 1920 | prepend: "https:" | json }}
        ],
      {%- endif %}
      "description": {{ product.description | strip_html | json }},
      {% if product.selected_or_first_available_variant.sku != blank -%}
        "sku": {{ product.selected_or_first_available_variant.sku | json }},
      {%- endif %}
      "brand": {
        "@type": "Brand",
        "name": {{ product.vendor | json }}
      },
      "offers": [
        {%- for variant in product.variants -%}
          {
            "@type" : "Offer",
            {%- if variant.sku != blank -%}
              "sku": {{ variant.sku | json }},
            {%- endif -%}
            {%- if variant.barcode.size == 12 -%}
              "gtin12": {{ variant.barcode }},
            {%- endif -%}
            {%- if variant.barcode.size == 13 -%}
              "gtin13": {{ variant.barcode }},
            {%- endif -%}
            {%- if variant.barcode.size == 14 -%}
              "gtin14": {{ variant.barcode }},
            {%- endif -%}
            "availability" : "http://schema.org/{% if variant.available %}InStock{% else %}OutOfStock{% endif %}",
            "price" : {{ variant.price | divided_by: 100.00 | json }},
            "priceCurrency" : {{ cart.currency.iso_code | json }},
            "url" : {{ request.origin | append: variant.url | json }}
          }{% unless forloop.last %},{% endunless %}
        {%- endfor -%}
      ]
    }
  </script>
  
  <script>
    // Mobile-friendly tooltip enhancement - AFTER all tooltips are created
    (function initMobileTooltips() {
      
      function setupTooltips() {
        try {
          
          // Wait a bit for Evey tooltips to be fully created
          setTimeout(() => {
            try {
        const existingTooltips = document.querySelectorAll('.evey-ticket-tooltip');
        
        existingTooltips.forEach((tooltip, index) => {
            hasContent: tooltip.innerHTML.length > 0,
            parentElement: tooltip.parentElement?.className,
            currentOpacity: tooltip.style.opacity,
            currentVisibility: tooltip.style.visibility,
            currentDisplay: tooltip.style.display,
            computedOpacity: window.getComputedStyle(tooltip).opacity,
            computedVisibility: window.getComputedStyle(tooltip).visibility,
            boundingRect: tooltip.getBoundingClientRect()
          });
          
          // Track tooltip state changes
          const observeTooltipState = () => {
            const observer = new MutationObserver((mutations) => {
              mutations.forEach((mutation) => {
                if (mutation.type === 'attributes' && (mutation.attributeName === 'style' || mutation.attributeName === 'class')) {
                    opacity: tooltip.style.opacity,
                    visibility: tooltip.style.visibility,
                    transform: tooltip.style.transform,
                    pointerEvents: tooltip.style.pointerEvents,
                    reason: 'style_attribute_changed'
                  });
                }
              });
            });
            observer.observe(tooltip, { attributes: true, attributeFilter: ['style', 'class'] });
          };
          observeTooltipState();
          
          // Add close button if not already present
          if (!tooltip.querySelector('.mobile-close-btn')) {
            const closeBtn = document.createElement('span');
            closeBtn.className = 'mobile-close-btn';
            closeBtn.innerHTML = '×';
            closeBtn.style.cssText = 'position: absolute; top: 5px; right: 8px; cursor: pointer; font-size: 18px; color: var(--christmas-gold); font-weight: bold; z-index: 1000;';
            tooltip.appendChild(closeBtn);
            
            // Close button functionality
            closeBtn.addEventListener('click', (e) => {
              e.preventDefault();
              e.stopPropagation();
              tooltip.style.opacity = '0';
              tooltip.style.transform = 'translateY(-10px)';
              tooltip.style.pointerEvents = 'none';
            });
            
          }
          
          // Find the corresponding info icon
          const infoIcon = tooltip.parentElement?.querySelector('.evey-info-icon');
          if (infoIcon) {
              className: infoIcon.className,
              innerHTML: infoIcon.innerHTML.substring(0, 50) + '...',
              boundingRect: infoIcon.getBoundingClientRect()
            });
            
            // Track ALL events on info icon
            ['click', 'touchstart', 'touchend', 'mouseenter', 'mouseleave', 'mouseover', 'mouseout'].forEach(eventType => {
              infoIcon.addEventListener(eventType, (e) => {
                  eventType,
                  target: e.target.className,
                  currentTarget: e.currentTarget.className,
                  tooltipOpacity: tooltip.style.opacity,
                  isMobile: window.innerWidth <= 768,
                  timeStamp: e.timeStamp
                });
              });
            });
            
            // Add mobile click handler (in addition to existing hover)
            infoIcon.addEventListener('click', (e) => {
              e.preventDefault();
              e.stopPropagation();
              
              const isVisible = tooltip.style.opacity === '1';
                tooltipIndex: index + 1,
                currentlyVisible: isVisible,
                action: isVisible ? 'closing' : 'opening',
                currentOpacity: tooltip.style.opacity,
                computedOpacity: window.getComputedStyle(tooltip).opacity
              });
              
              if (isVisible) {
                // Close this tooltip
                tooltip.style.opacity = '0';
                tooltip.style.transform = 'translateY(-10px)';
                tooltip.style.pointerEvents = 'none';
              } else {
                // Close all other tooltips first
                existingTooltips.forEach((otherTooltip, otherIndex) => {
                  if (otherTooltip !== tooltip && otherTooltip.style.opacity === '1') {
                    otherTooltip.style.opacity = '0';
                    otherTooltip.style.transform = 'translateY(-10px)';
                    otherTooltip.style.pointerEvents = 'none';
                  }
                });
                
                // Open this tooltip
                tooltip.style.opacity = '1';
                tooltip.style.transform = 'translateY(0)';
                tooltip.style.pointerEvents = 'auto';
                  finalOpacity: tooltip.style.opacity,
                  finalTransform: tooltip.style.transform,
                  finalPointerEvents: tooltip.style.pointerEvents,
                  boundingRect: tooltip.getBoundingClientRect()
                });
              }
            });
            
          } else {
          }
        });
        
        // Click outside to close all tooltips
        document.addEventListener('click', (e) => {
          const clickTarget = e.target.closest('.evey-info-icon') ? 'info-icon' : 
                             e.target.closest('.evey-ticket-tooltip') ? 'tooltip' : 'outside';
            target: clickTarget,
            elementClass: e.target.className,
            coordinates: { x: e.clientX, y: e.clientY }
          });
          
          if (!e.target.closest('.evey-info-icon') && !e.target.closest('.evey-ticket-tooltip')) {
            const openTooltips = Array.from(existingTooltips).filter(t => t.style.opacity === '1');
            if (openTooltips.length > 0) {
              openTooltips.forEach((tooltip, i) => {
                tooltip.style.opacity = '0';
                tooltip.style.transform = 'translateY(-10px)';
                tooltip.style.pointerEvents = 'none';
              });
            }
          }
        });
        
            } catch (error) {
              console.error('❌ Error in tooltip setup:', error);
            }
          }, 1000); // Wait 1 second for everything to load
        } catch (error) {
          console.error('❌ Error in setupTooltips:', error);
        }
      }
      
      // Try both immediate and DOMContentLoaded
      if (document.readyState === 'loading') {
        document.addEventListener('DOMContentLoaded', setupTooltips);
      } else {
        setupTooltips();
      }
    })();
  </script>
  <!-- Trust Badges Section - Coherent with design -->
  <div class="trust-section" style="margin: 2rem 0;">
    <div class="sketch-card" style="padding: 1.5rem; margin: 1.5rem auto; max-width: 800px;">
      
      <!-- Google Reviews Badge - Top -->
      {% assign google_rating = settings.google_rating | default: 4.6 %}
      {% assign google_reviews = settings.google_reviews_count | default: 900 %}
      {% assign google_url = settings.google_reviews_url | default: 'https://www.google.com/maps?cid=8094225921724993244' %}
      
      <div style="text-align: center; margin-bottom: 1.5rem;">
        <a href="{{ google_url }}" target="_blank" rel="noopener" class="trust-badge-google" style="display: inline-flex; align-items: center; justify-content: center; gap: 1rem; text-decoration: none; color: white; padding: 1rem 1.5rem; background: rgba(255,255,255,0.05); border-radius: 12px; transition: all 0.3s; flex-wrap: wrap;">
          <!-- Google G Icon -->
          <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg" style="flex-shrink: 0;">
            <path d="M22.56 12.25c0-.78-.07-1.53-.2-2.25H12v4.26h5.92c-.26 1.37-1.04 2.53-2.21 3.31v2.77h3.57c2.08-1.92 3.28-4.74 3.28-8.09z" fill="currentColor"/>
            <path d="M12 23c2.97 0 5.46-.98 7.28-2.66l-3.57-2.77c-.98.66-2.23 1.06-3.71 1.06-2.86 0-5.29-1.93-6.16-4.53H2.18v2.84C3.99 20.53 7.7 23 12 23z" fill="currentColor"/>
            <path d="M5.84 14.09c-.22-.66-.35-1.36-.35-2.09s.13-1.43.35-2.09V7.07H2.18C1.43 8.55 1 10.22 1 12s.43 3.45 1.18 4.93l2.85-2.22.81-.62z" fill="currentColor"/>
            <path d="M12 5.38c1.62 0 3.06.56 4.21 1.64l3.15-3.15C17.45 2.09 14.97 1 12 1 7.7 1 3.99 3.47 2.18 7.07l3.66 2.84c.87-2.6 3.3-4.53 6.16-4.53z" fill="currentColor"/>
          </svg>
          
          <!-- Stars and Rating Container -->
          <div style="display: flex; flex-direction: column; align-items: center; gap: 0.5rem; min-width: 0;">
            <!-- Stars Rating -->
            <div style="display: flex; align-items: center; gap: 3px;">
              <!-- Star 1 - Full -->
              <svg width="16" height="16" viewBox="0 0 24 24" fill="#ffc107">
                <path d="M12 2l3.09 6.26L22 9.27l-5 4.87 1.18 6.88L12 17.77l-6.18 3.25L7 14.14 2 9.27l6.91-1.01L12 2z"/>
              </svg>
              <!-- Star 2 - Full -->
              <svg width="16" height="16" viewBox="0 0 24 24" fill="#ffc107">
                <path d="M12 2l3.09 6.26L22 9.27l-5 4.87 1.18 6.88L12 17.77l-6.18 3.25L7 14.14 2 9.27l6.91-1.01L12 2z"/>
              </svg>
              <!-- Star 3 - Full -->
              <svg width="16" height="16" viewBox="0 0 24 24" fill="#ffc107">
                <path d="M12 2l3.09 6.26L22 9.27l-5 4.87 1.18 6.88L12 17.77l-6.18 3.25L7 14.14 2 9.27l6.91-1.01L12 2z"/>
              </svg>
              <!-- Star 4 - Full -->
              <svg width="16" height="16" viewBox="0 0 24 24" fill="#ffc107">
                <path d="M12 2l3.09 6.26L22 9.27l-5 4.87 1.18 6.88L12 17.77l-6.18 3.25L7 14.14 2 9.27l6.91-1.01L12 2z"/>
              </svg>
              <!-- Star 5 - Half (0.6) -->
              <svg width="16" height="16" viewBox="0 0 24 24" fill="none">
                <defs>
                  <clipPath id="half-star-clip">
                    <rect x="0" y="0" width="14.4" height="24"/>
                  </clipPath>
                </defs>
                <path d="M12 2l3.09 6.26L22 9.27l-5 4.87 1.18 6.88L12 17.77l-6.18 3.25L7 14.14 2 9.27l6.91-1.01L12 2z" fill="#ffc107" clip-path="url(#half-star-clip)"/>
                <path d="M12 2l3.09 6.26L22 9.27l-5 4.87 1.18 6.88L12 17.77l-6.18 3.25L7 14.14 2 9.27l6.91-1.01L12 2z" fill="none" stroke="rgba(255,193,7,0.3)" stroke-width="1"/>
              </svg>
            </div>
            
            <!-- Rating Text -->
            <div style="font-size: 16px; font-weight: 500; text-align: center; line-height: 1.4;">
              <span style="display: inline-block;">{{ google_rating | replace: '.', ',' }}/5 su Google</span>
              <span style="display: inline-block; margin-left: 0.5rem; opacity: 0.9;">{{ google_reviews }}+ recensioni</span>
            </div>
          </div>
        </a>
      </div>
      
      <style>
        .trust-badge-google:hover {
          background: rgba(255,255,255,0.1) !important;
          transform: translateY(-1px);
        }
        
        @media (max-width: 768px) {
          .trust-badge-google {
            flex-direction: column !important;
            gap: 0.75rem !important;
            padding: 1rem !important;
          }
          
          .trust-badge-google div:last-child {
            font-size: 14px !important;
          }
          
          .trust-badge-google div:last-child span {
            display: block !important;
            margin-left: 0 !important;
            margin-top: 0.25rem !important;
          }
        }
        
        @media (max-width: 480px) {
          .trust-badge-google svg:first-child {
            width: 20px !important;
            height: 20px !important;
          }
          
          .trust-badge-google div svg {
            width: 14px !important;
            height: 14px !important;
          }
        }
      </style>

      <!-- Trust Badges Row - HIDDEN -->
      <div style="display: none; justify-content: space-between; align-items: flex-start; gap: 1rem; margin-bottom: 1.5rem;">
        
        <!-- Date Flexibility -->
        <div class="trust-badge" style="display: flex; flex-direction: column; align-items: center; text-align: center; flex: 1;">
          <svg width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="1.5" style="margin-bottom: 0.5rem;">
            <rect x="3" y="4" width="18" height="18" rx="2" ry="2"></rect>
            <line x1="16" y1="2" x2="16" y2="6"></line>
            <line x1="8" y1="2" x2="8" y2="6"></line>
            <line x1="3" y1="10" x2="21" y2="10"></line>
            <path d="M8 14l2 2 4-4" stroke-linecap="round" stroke-linejoin="round"></path>
          </svg>
          <div style="color: var(--christmas-gold); font-weight: 600; font-size: 19px; text-transform: uppercase;">CAMBIO DATA</div>
          <div style="color: rgba(255,255,255,0.6); font-size: 19px;">Modifica senza pensieri</div>
        </div>
        
        <!-- FAQ Link -->
        <a href="/pages/faq" class="trust-badge" style="display: flex; flex-direction: column; align-items: center; text-align: center; flex: 1; text-decoration: none; color: inherit; transition: opacity 0.3s;">
          <svg width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="1.5" style="margin-bottom: 0.5rem;">
            <circle cx="12" cy="12" r="10"></circle>
            <path d="M9.09 9a3 3 0 015.83 1c0 2-3 3-3 3" stroke-linecap="round" stroke-linejoin="round"></path>
            <line x1="12" y1="17" x2="12.01" y2="17" stroke-linecap="round" stroke-linejoin="round"></line>
          </svg>
          <div style="color: var(--christmas-gold); font-weight: 600; font-size: 19px; text-transform: uppercase;">DOMANDE FREQUENTI</div>
          <div style="color: rgba(255,255,255,0.6); font-size: 19px;">FAQ e informazioni</div>
        </a>
        
        <!-- Support Chat Link -->
        <a href="/pages/contatti" class="trust-badge" style="display: flex; flex-direction: column; align-items: center; text-align: center; flex: 1; text-decoration: none; color: inherit; transition: opacity 0.3s;">
          <svg width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="1.5" style="margin-bottom: 0.5rem;">
            <path d="M21 15a2 2 0 01-2 2H7l-4 4V5a2 2 0 012-2h14a2 2 0 012 2z" stroke-linecap="round" stroke-linejoin="round"></path>
            <circle cx="9" cy="9" r="1" fill="currentColor"></circle>
            <circle cx="15" cy="9" r="1" fill="currentColor"></circle>
            <path d="M9 13h6" stroke-linecap="round"></path>
          </svg>
          <div style="color: var(--christmas-gold); font-weight: 600; font-size: 19px; text-transform: uppercase;">ASSISTENZA 7/7</div>
          <div style="color: rgba(255,255,255,0.6); font-size: 19px;">Chatta con noi</div>
        </a>
        
      </div>
      
      <!-- Payment Security & Methods Row -->
      {% if shop.enabled_payment_types.size > 0 %}
      <div class="payment-row" style="display: flex; justify-content: space-between; align-items: center; padding-top: 1.5rem; border-top: 1px solid rgba(255,255,255,0.1); gap: 2rem;">
        
        <!-- Left: Secure Payments Badge -->
        <div style="flex-shrink: 0;">
          <div style="display: inline-flex; align-items: center; gap: 0.5rem; background: rgba(5, 150, 105, 0.15); border: 1px solid rgba(5, 150, 105, 0.3); padding: 0.5rem 1rem; border-radius: 20px;">
            <svg width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="var(--christmas-green)" stroke-width="2">
              <rect x="3" y="11" width="18" height="10" rx="2" ry="2"></rect>
              <circle cx="12" cy="16" r="1" fill="var(--christmas-green)"></circle>
              <path d="M7 11V7a5 5 0 0110 0v4" stroke-linecap="round"></path>
            </svg>
            <span style="color: var(--christmas-green); font-weight: 600; font-size: 12px; text-transform: uppercase; letter-spacing: 0.5px;">Pagamenti Sicuri SSL</span>
          </div>
        </div>
        
        <!-- Right: Payment Icons -->
        <div class="payment-icons-container" style="display: flex; align-items: center; gap: 12px; flex-wrap: wrap;">
          {% for type in shop.enabled_payment_types %}
            <span class="payment-icon payment-logo-large">
              {{ type | payment_type_svg_tag }}
            </span>
          {% endfor %}
        </div>
        
      </div>
      {% endif %}
      
    </div>
  </div>
  
  <style>
    .trust-badge-google:hover {
      background: rgba(255,255,255,0.1) !important;
    }
    
    .trust-badge svg {
      color: var(--christmas-gold);
    }
    
    a.trust-badge:hover {
      opacity: 0.8;
    }
    
    /* Payment icons - let's see default size first */
    .payment-logo-large {
      display: inline-flex;
      align-items: center;
      justify-content: center;
    }
    
    .mobile-break {
      display: none;
    }
    
    @media (max-width: 768px) {
      .trust-section .sketch-card {
        padding: 30px 20px;
      }
      
      .trust-badge {
        flex-direction: column;
        text-align: center;
      }
      
      .mobile-break {
        display: inline;
      }
      
      /* Stack payment section vertically on mobile */
      .payment-row {
        flex-direction: column !important;
        align-items: center !important;
        gap: 1.5rem !important;
      }
    }
  </style>

<!-- End product content -->
{% render 'evey-custom-code' %}


{% schema %}
{
  "name": "t:sections.main-product.name",
  "tag": "section",
  "class": "section",
  "blocks": [
    {
      "type": "@app"
    },
    {
      "type": "text",
      "name": "t:sections.main-product.blocks.text.name",
      "settings": [
        {
          "type": "inline_richtext",
          "id": "text",
          "default": "Text block",
          "label": "t:sections.main-product.blocks.text.settings.text.label"
        },
        {
          "type": "select",
          "id": "text_style",
          "options": [
            {
              "value": "body",
              "label": "t:sections.main-product.blocks.text.settings.text_style.options__1.label"
            },
            {
              "value": "subtitle",
              "label": "t:sections.main-product.blocks.text.settings.text_style.options__2.label"
            },
            {
              "value": "uppercase",
              "label": "t:sections.main-product.blocks.text.settings.text_style.options__3.label"
            }
          ],
          "default": "body",
          "label": "t:sections.main-product.blocks.text.settings.text_style.label"
        }
      ]
    },
    {
      "type": "title",
      "name": "t:sections.main-product.blocks.title.name",
      "limit": 1
    },
    {
      "type": "price",
      "name": "t:sections.main-product.blocks.price.name",
      "limit": 1
    },
    {
      "type": "sku",
      "name": "t:sections.main-product.blocks.sku.name",
      "limit": 1,
      "settings": [
        {
          "type": "select",
          "id": "text_style",
          "options": [
            {
              "value": "body",
              "label": "t:sections.main-product.blocks.sku.settings.text_style.options__1.label"
            },
            {
              "value": "subtitle",
              "label": "t:sections.main-product.blocks.sku.settings.text_style.options__2.label"
            },
            {
              "value": "uppercase",
              "label": "t:sections.main-product.blocks.sku.settings.text_style.options__3.label"
            }
          ],
          "default": "body",
          "label": "t:sections.main-product.blocks.sku.settings.text_style.label"
        }
      ]
    },
    {
      "type": "inventory",
      "name": "t:sections.main-product.blocks.inventory.name",
      "limit": 1,
      "settings": [
        {
          "type": "select",
          "id": "text_style",
          "options": [
            {
              "value": "body",
              "label": "t:sections.main-product.blocks.inventory.settings.text_style.options__1.label"
            },
            {
              "value": "subtitle",
              "label": "t:sections.main-product.blocks.inventory.settings.text_style.options__2.label"
            },
            {
              "value": "uppercase",
              "label": "t:sections.main-product.blocks.inventory.settings.text_style.options__3.label"
            }
          ],
          "default": "body",
          "label": "t:sections.main-product.blocks.inventory.settings.text_style.label"
        },
        {
          "type": "range",
          "id": "inventory_threshold",
          "label": "t:sections.main-product.blocks.inventory.settings.inventory_threshold.label",
          "min": 0,
          "max": 100,
          "step": 1,
          "info": "t:sections.main-product.blocks.inventory.settings.inventory_threshold.info",
          "default": 10
        },
        {
          "type": "checkbox",
          "id": "show_inventory_quantity",
          "label": "t:sections.main-product.blocks.inventory.settings.show_inventory_quantity.label",
          "default": true
        }
      ]
    },
    {
      "type": "quantity_selector",
      "name": "t:sections.main-product.blocks.quantity_selector.name",
      "limit": 1
    },
    {
      "type": "variant_picker",
      "name": "t:sections.main-product.blocks.variant_picker.name",
      "limit": 1,
      "settings": [
        {
          "type": "select",
          "id": "picker_type",
          "options": [
            {
              "value": "dropdown",
              "label": "t:sections.main-product.blocks.variant_picker.settings.picker_type.options__1.label"
            },
            {
              "value": "button",
              "label": "t:sections.main-product.blocks.variant_picker.settings.picker_type.options__2.label"
            }
          ],
          "default": "button",
          "label": "t:sections.main-product.blocks.variant_picker.settings.picker_type.label"
        }
      ]
    },
    {
      "type": "buy_buttons",
      "name": "t:sections.main-product.blocks.buy_buttons.name",
      "limit": 1,
      "settings": [
        {
          "type": "checkbox",
          "id": "show_dynamic_checkout",
          "default": true,
          "label": "t:sections.main-product.blocks.buy_buttons.settings.show_dynamic_checkout.label",
          "info": "t:sections.main-product.blocks.buy_buttons.settings.show_dynamic_checkout.info"
        },
        {
          "type": "checkbox",
          "id": "show_gift_card_recipient",
          "default": true,
          "label": "t:sections.main-product.blocks.buy_buttons.settings.show_gift_card_recipient.label",
          "info": "t:sections.main-product.blocks.buy_buttons.settings.show_gift_card_recipient.info"
        }
      ]
    },
    {
      "type": "description",
      "name": "t:sections.main-product.blocks.description.name",
      "limit": 1
    },
    {
      "type": "share",
      "name": "t:sections.main-product.blocks.share.name",
      "limit": 1,
      "settings": [
        {
          "type": "text",
          "id": "share_label",
          "label": "t:sections.main-product.blocks.share.settings.text.label",
          "default": "Share"
        },
        {
          "type": "paragraph",
          "content": "t:sections.main-product.blocks.share.settings.featured_image_info.content"
        },
        {
          "type": "paragraph",
          "content": "t:sections.main-product.blocks.share.settings.title_info.content"
        }
      ]
    },
    {
      "type": "custom_liquid",
      "name": "t:sections.custom-liquid.name",
      "settings": [
        {
          "type": "liquid",
          "id": "custom_liquid",
          "label": "t:sections.custom-liquid.settings.custom_liquid.label",
          "info": "t:sections.custom-liquid.settings.custom_liquid.info"
        }
      ]
    },
    {
      "type": "collapsible_tab",
      "name": "t:sections.main-product.blocks.collapsible_tab.name",
      "settings": [
        {
          "type": "text",
          "id": "heading",
          "default": "Collapsible row",
          "info": "t:sections.main-product.blocks.collapsible_tab.settings.heading.info",
          "label": "t:sections.main-product.blocks.collapsible_tab.settings.heading.label"
        },
        {
          "type": "select",
          "id": "icon",
          "options": [
            {
              "value": "none",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__1.label"
            },
            {
              "value": "apple",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__2.label"
            },
            {
              "value": "banana",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__3.label"
            },
            {
              "value": "bottle",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__4.label"
            },
            {
              "value": "box",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__5.label"
            },
            {
              "value": "carrot",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__6.label"
            },
            {
              "value": "chat_bubble",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__7.label"
            },
            {
              "value": "check_mark",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__8.label"
            },
            {
              "value": "clipboard",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__9.label"
            },
            {
              "value": "dairy",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__10.label"
            },
            {
              "value": "dairy_free",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__11.label"
            },
            {
              "value": "dryer",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__12.label"
            },
            {
              "value": "eye",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__13.label"
            },
            {
              "value": "fire",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__14.label"
            },
            {
              "value": "gluten_free",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__15.label"
            },
            {
              "value": "heart",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__16.label"
            },
            {
              "value": "iron",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__17.label"
            },
            {
              "value": "leaf",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__18.label"
            },
            {
              "value": "leather",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__19.label"
            },
            {
              "value": "lightning_bolt",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__20.label"
            },
            {
              "value": "lipstick",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__21.label"
            },
            {
              "value": "lock",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__22.label"
            },
            {
              "value": "map_pin",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__23.label"
            },
            {
              "value": "nut_free",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__24.label"
            },
            {
              "value": "pants",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__25.label"
            },
            {
              "value": "paw_print",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__26.label"
            },
            {
              "value": "pepper",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__27.label"
            },
            {
              "value": "perfume",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__28.label"
            },
            {
              "value": "plane",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__29.label"
            },
            {
              "value": "plant",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__30.label"
            },
            {
              "value": "price_tag",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__31.label"
            },
            {
              "value": "question_mark",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__32.label"
            },
            {
              "value": "recycle",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__33.label"
            },
            {
              "value": "return",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__34.label"
            },
            {
              "value": "ruler",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__35.label"
            },
            {
              "value": "serving_dish",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__36.label"
            },
            {
              "value": "shirt",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__37.label"
            },
            {
              "value": "shoe",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__38.label"
            },
            {
              "value": "silhouette",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__39.label"
            },
            {
              "value": "snowflake",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__40.label"
            },
            {
              "value": "star",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__41.label"
            },
            {
              "value": "stopwatch",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__42.label"
            },
            {
              "value": "truck",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__43.label"
            },
            {
              "value": "washing",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__44.label"
            }
          ],
          "default": "check_mark",
          "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.label"
        },
        {
          "type": "richtext",
          "id": "content",
          "label": "t:sections.main-product.blocks.collapsible_tab.settings.content.label"
        },
        {
          "type": "page",
          "id": "page",
          "label": "t:sections.main-product.blocks.collapsible_tab.settings.page.label"
        }
      ]
    },
    {
      "type": "popup",
      "name": "t:sections.main-product.blocks.popup.name",
      "settings": [
        {
          "type": "text",
          "id": "text",
          "default": "Pop-up link text",
          "label": "t:sections.main-product.blocks.popup.settings.link_label.label"
        },
        {
          "id": "page",
          "type": "page",
          "label": "t:sections.main-product.blocks.popup.settings.page.label"
        }
      ]
    },
    {
      "type": "rating",
      "name": "t:sections.main-product.blocks.rating.name",
      "limit": 1,
      "settings": [
        {
          "type": "paragraph",
          "content": "t:sections.main-product.blocks.rating.settings.paragraph.content"
        }
      ]
    },
    {
      "type": "complementary",
      "name": "t:sections.main-product.blocks.complementary_products.name",
      "limit": 1,
      "settings": [
        {
          "type": "paragraph",
          "content": "t:sections.main-product.blocks.complementary_products.settings.paragraph.content"
        },
        {
          "type": "text",
          "id": "block_heading",
          "default": "Pairs well with",
          "label": "t:sections.main-product.blocks.complementary_products.settings.heading.label"
        },
        {
          "type": "checkbox",
          "id": "make_collapsible_row",
          "default": false,
          "label": "t:sections.main-product.blocks.complementary_products.settings.make_collapsible_row.label"
        },
        {
          "type": "select",
          "id": "icon",
          "options": [
            {
              "value": "none",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__1.label"
            },
            {
              "value": "apple",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__2.label"
            },
            {
              "value": "banana",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__3.label"
            },
            {
              "value": "bottle",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__4.label"
            },
            {
              "value": "box",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__5.label"
            },
            {
              "value": "carrot",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__6.label"
            },
            {
              "value": "chat_bubble",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__7.label"
            },
            {
              "value": "check_mark",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__8.label"
            },
            {
              "value": "clipboard",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__9.label"
            },
            {
              "value": "dairy",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__10.label"
            },
            {
              "value": "dairy_free",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__11.label"
            },
            {
              "value": "dryer",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__12.label"
            },
            {
              "value": "eye",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__13.label"
            },
            {
              "value": "fire",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__14.label"
            },
            {
              "value": "gluten_free",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__15.label"
            },
            {
              "value": "heart",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__16.label"
            },
            {
              "value": "iron",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__17.label"
            },
            {
              "value": "leaf",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__18.label"
            },
            {
              "value": "leather",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__19.label"
            },
            {
              "value": "lightning_bolt",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__20.label"
            },
            {
              "value": "lipstick",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__21.label"
            },
            {
              "value": "lock",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__22.label"
            },
            {
              "value": "map_pin",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__23.label"
            },
            {
              "value": "nut_free",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__24.label"
            },
            {
              "value": "pants",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__25.label"
            },
            {
              "value": "paw_print",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__26.label"
            },
            {
              "value": "pepper",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__27.label"
            },
            {
              "value": "perfume",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__28.label"
            },
            {
              "value": "plane",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__29.label"
            },
            {
              "value": "plant",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__30.label"
            },
            {
              "value": "price_tag",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__31.label"
            },
            {
              "value": "question_mark",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__32.label"
            },
            {
              "value": "recycle",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__33.label"
            },
            {
              "value": "return",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__34.label"
            },
            {
              "value": "ruler",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__35.label"
            },
            {
              "value": "serving_dish",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__36.label"
            },
            {
              "value": "shirt",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__37.label"
            },
            {
              "value": "shoe",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__38.label"
            },
            {
              "value": "silhouette",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__39.label"
            },
            {
              "value": "snowflake",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__40.label"
            },
            {
              "value": "star",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__41.label"
            },
            {
              "value": "stopwatch",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__42.label"
            },
            {
              "value": "truck",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__43.label"
            },
            {
              "value": "washing",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__44.label"
            }
          ],
          "default": "price_tag",
          "info": "t:sections.main-product.blocks.complementary_products.settings.icon.info",
          "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.label"
        },
        {
          "type": "range",
          "id": "product_list_limit",
          "min": 1,
          "max": 10,
          "step": 1,
          "default": 10,
          "label": "t:sections.main-product.blocks.complementary_products.settings.product_list_limit.label"
        },
        {
          "type": "range",
          "id": "products_per_page",
          "min": 1,
          "max": 4,
          "step": 1,
          "default": 3,
          "label": "t:sections.main-product.blocks.complementary_products.settings.products_per_page.label"
        },
        {
          "type": "select",
          "id": "pagination_style",
          "options": [
            {
              "value": "dots",
              "label": "t:sections.main-product.blocks.complementary_products.settings.pagination_style.options.option_1"
            },
            {
              "value": "counter",
              "label": "t:sections.main-product.blocks.complementary_products.settings.pagination_style.options.option_2"
            },
            {
              "value": "numbers",
              "label": "t:sections.main-product.blocks.complementary_products.settings.pagination_style.options.option_3"
            }
          ],
          "label": "t:sections.main-product.blocks.complementary_products.settings.pagination_style.label",
          "default": "counter"
        },
        {
          "type": "header",
          "content": "t:sections.main-product.blocks.complementary_products.settings.product_card.heading"
        },
        {
          "type": "select",
          "id": "image_ratio",
          "options": [
            {
              "value": "portrait",
              "label": "t:sections.main-product.blocks.complementary_products.settings.image_ratio.options.option_1"
            },
            {
              "value": "square",
              "label": "t:sections.main-product.blocks.complementary_products.settings.image_ratio.options.option_2"
            }
          ],
          "label": "t:sections.main-product.blocks.complementary_products.settings.image_ratio.label",
          "default": "square"
        },
        {
          "type": "checkbox",
          "id": "enable_quick_add",
          "label": "t:sections.main-product.blocks.complementary_products.settings.enable_quick_add.label",
          "default": false
        }
      ]
    },
    {
      "type": "icon-with-text",
      "name": "t:sections.main-product.blocks.icon_with_text.name",
      "settings": [
        {
          "type": "select",
          "id": "layout",
          "options": [
            {
              "value": "horizontal",
              "label": "t:sections.main-product.blocks.icon_with_text.settings.layout.options__1.label"
            },
            {
              "value": "vertical",
              "label": "t:sections.main-product.blocks.icon_with_text.settings.layout.options__2.label"
            }
          ],
          "default": "horizontal",
          "label": "t:sections.main-product.blocks.icon_with_text.settings.layout.label"
        },
        {
          "type": "header",
          "content": "t:sections.main-product.blocks.icon_with_text.settings.content.label",
          "info": "t:sections.main-product.blocks.icon_with_text.settings.content.info"
        },
        {
          "type": "select",
          "id": "icon_1",
          "options": [
            {
              "value": "none",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__1.label"
            },
            {
              "value": "apple",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__2.label"
            },
            {
              "value": "banana",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__3.label"
            },
            {
              "value": "bottle",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__4.label"
            },
            {
              "value": "box",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__5.label"
            },
            {
              "value": "carrot",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__6.label"
            },
            {
              "value": "chat_bubble",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__7.label"
            },
            {
              "value": "check_mark",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__8.label"
            },
            {
              "value": "clipboard",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__9.label"
            },
            {
              "value": "dairy",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__10.label"
            },
            {
              "value": "dairy_free",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__11.label"
            },
            {
              "value": "dryer",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__12.label"
            },
            {
              "value": "eye",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__13.label"
            },
            {
              "value": "fire",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__14.label"
            },
            {
              "value": "gluten_free",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__15.label"
            },
            {
              "value": "heart",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__16.label"
            },
            {
              "value": "iron",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__17.label"
            },
            {
              "value": "leaf",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__18.label"
            },
            {
              "value": "leather",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__19.label"
            },
            {
              "value": "lightning_bolt",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__20.label"
            },
            {
              "value": "lipstick",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__21.label"
            },
            {
              "value": "lock",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__22.label"
            },
            {
              "value": "map_pin",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__23.label"
            },
            {
              "value": "nut_free",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__24.label"
            },
            {
              "value": "pants",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__25.label"
            },
            {
              "value": "paw_print",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__26.label"
            },
            {
              "value": "pepper",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__27.label"
            },
            {
              "value": "perfume",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__28.label"
            },
            {
              "value": "plane",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__29.label"
            },
            {
              "value": "plant",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__30.label"
            },
            {
              "value": "price_tag",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__31.label"
            },
            {
              "value": "question_mark",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__32.label"
            },
            {
              "value": "recycle",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__33.label"
            },
            {
              "value": "return",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__34.label"
            },
            {
              "value": "ruler",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__35.label"
            },
            {
              "value": "serving_dish",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__36.label"
            },
            {
              "value": "shirt",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__37.label"
            },
            {
              "value": "shoe",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__38.label"
            },
            {
              "value": "silhouette",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__39.label"
            },
            {
              "value": "snowflake",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__40.label"
            },
            {
              "value": "star",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__41.label"
            },
            {
              "value": "stopwatch",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__42.label"
            },
            {
              "value": "truck",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__43.label"
            },
            {
              "value": "washing",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__44.label"
            }
          ],
          "default": "heart",
          "label": "t:sections.main-product.blocks.icon_with_text.settings.icon_1.label"
        },
        {
          "type": "image_picker",
          "id": "image_1",
          "label": "t:sections.main-product.blocks.icon_with_text.settings.image_1.label"
        },
        {
          "type": "inline_richtext",
          "id": "heading_1",
          "default": "Heading",
          "label": "t:sections.main-product.blocks.icon_with_text.settings.heading_1.label",
          "info": "t:sections.main-product.blocks.icon_with_text.settings.heading.info"
        },
        {
          "type": "select",
          "id": "icon_2",
          "options": [
            {
              "value": "none",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__1.label"
            },
            {
              "value": "apple",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__2.label"
            },
            {
              "value": "banana",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__3.label"
            },
            {
              "value": "bottle",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__4.label"
            },
            {
              "value": "box",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__5.label"
            },
            {
              "value": "carrot",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__6.label"
            },
            {
              "value": "chat_bubble",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__7.label"
            },
            {
              "value": "check_mark",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__8.label"
            },
            {
              "value": "clipboard",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__9.label"
            },
            {
              "value": "dairy",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__10.label"
            },
            {
              "value": "dairy_free",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__11.label"
            },
            {
              "value": "dryer",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__12.label"
            },
            {
              "value": "eye",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__13.label"
            },
            {
              "value": "fire",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__14.label"
            },
            {
              "value": "gluten_free",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__15.label"
            },
            {
              "value": "heart",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__16.label"
            },
            {
              "value": "iron",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__17.label"
            },
            {
              "value": "leaf",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__18.label"
            },
            {
              "value": "leather",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__19.label"
            },
            {
              "value": "lightning_bolt",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__20.label"
            },
            {
              "value": "lipstick",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__21.label"
            },
            {
              "value": "lock",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__22.label"
            },
            {
              "value": "map_pin",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__23.label"
            },
            {
              "value": "nut_free",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__24.label"
            },
            {
              "value": "pants",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__25.label"
            },
            {
              "value": "paw_print",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__26.label"
            },
            {
              "value": "pepper",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__27.label"
            },
            {
              "value": "perfume",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__28.label"
            },
            {
              "value": "plane",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__29.label"
            },
            {
              "value": "plant",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__30.label"
            },
            {
              "value": "price_tag",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__31.label"
            },
            {
              "value": "question_mark",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__32.label"
            },
            {
              "value": "recycle",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__33.label"
            },
            {
              "value": "return",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__34.label"
            },
            {
              "value": "ruler",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__35.label"
            },
            {
              "value": "serving_dish",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__36.label"
            },
            {
              "value": "shirt",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__37.label"
            },
            {
              "value": "shoe",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__38.label"
            },
            {
              "value": "silhouette",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__39.label"
            },
            {
              "value": "snowflake",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__40.label"
            },
            {
              "value": "star",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__41.label"
            },
            {
              "value": "stopwatch",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__42.label"
            },
            {
              "value": "truck",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__43.label"
            },
            {
              "value": "washing",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__44.label"
            }
          ],
          "default": "return",
          "label": "t:sections.main-product.blocks.icon_with_text.settings.icon_2.label"
        },
        {
          "type": "image_picker",
          "id": "image_2",
          "label": "t:sections.main-product.blocks.icon_with_text.settings.image_2.label"
        },
        {
          "type": "inline_richtext",
          "id": "heading_2",
          "default": "Heading",
          "label": "t:sections.main-product.blocks.icon_with_text.settings.heading_2.label",
          "info": "t:sections.main-product.blocks.icon_with_text.settings.heading.info"
        },
        {
          "type": "select",
          "id": "icon_3",
          "options": [
            {
              "value": "none",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__1.label"
            },
            {
              "value": "apple",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__2.label"
            },
            {
              "value": "banana",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__3.label"
            },
            {
              "value": "bottle",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__4.label"
            },
            {
              "value": "box",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__5.label"
            },
            {
              "value": "carrot",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__6.label"
            },
            {
              "value": "chat_bubble",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__7.label"
            },
            {
              "value": "check_mark",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__8.label"
            },
            {
              "value": "clipboard",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__9.label"
            },
            {
              "value": "dairy",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__10.label"
            },
            {
              "value": "dairy_free",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__11.label"
            },
            {
              "value": "dryer",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__12.label"
            },
            {
              "value": "eye",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__13.label"
            },
            {
              "value": "fire",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__14.label"
            },
            {
              "value": "gluten_free",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__15.label"
            },
            {
              "value": "heart",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__16.label"
            },
            {
              "value": "iron",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__17.label"
            },
            {
              "value": "leaf",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__18.label"
            },
            {
              "value": "leather",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__19.label"
            },
            {
              "value": "lightning_bolt",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__20.label"
            },
            {
              "value": "lipstick",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__21.label"
            },
            {
              "value": "lock",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__22.label"
            },
            {
              "value": "map_pin",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__23.label"
            },
            {
              "value": "nut_free",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__24.label"
            },
            {
              "value": "pants",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__25.label"
            },
            {
              "value": "paw_print",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__26.label"
            },
            {
              "value": "pepper",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__27.label"
            },
            {
              "value": "perfume",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__28.label"
            },
            {
              "value": "plane",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__29.label"
            },
            {
              "value": "plant",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__30.label"
            },
            {
              "value": "price_tag",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__31.label"
            },
            {
              "value": "question_mark",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__32.label"
            },
            {
              "value": "recycle",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__33.label"
            },
            {
              "value": "return",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__34.label"
            },
            {
              "value": "ruler",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__35.label"
            },
            {
              "value": "serving_dish",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__36.label"
            },
            {
              "value": "shirt",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__37.label"
            },
            {
              "value": "shoe",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__38.label"
            },
            {
              "value": "silhouette",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__39.label"
            },
            {
              "value": "snowflake",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__40.label"
            },
            {
              "value": "star",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__41.label"
            },
            {
              "value": "stopwatch",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__42.label"
            },
            {
              "value": "truck",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__43.label"
            },
            {
              "value": "washing",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__44.label"
            }
          ],
          "default": "truck",
          "label": "t:sections.main-product.blocks.icon_with_text.settings.icon_3.label"
        },
        {
          "type": "image_picker",
          "id": "image_3",
          "label": "t:sections.main-product.blocks.icon_with_text.settings.image_3.label"
        },
        {
          "type": "inline_richtext",
          "id": "heading_3",
          "default": "Heading",
          "label": "t:sections.main-product.blocks.icon_with_text.settings.heading_3.label",
          "info": "t:sections.main-product.blocks.icon_with_text.settings.heading.info"
        }
      ]
    }
  ],
  "settings": [
    {
      "type": "checkbox",
      "id": "enable_sticky_info",
      "default": true,
      "label": "t:sections.main-product.settings.enable_sticky_info.label"
    },
    {
      "type": "header",
      "content": "t:sections.main-product.settings.header.content",
      "info": "t:sections.main-product.settings.header.info"
    },
    {
      "type": "select",
      "id": "media_size",
      "options": [
        {
          "value": "small",
          "label": "t:sections.main-product.settings.media_size.options__1.label"
        },
        {
          "value": "medium",
          "label": "t:sections.main-product.settings.media_size.options__2.label"
        },
        {
          "value": "large",
          "label": "t:sections.main-product.settings.media_size.options__3.label"
        }
      ],
      "default": "large",
      "label": "t:sections.main-product.settings.media_size.label",
      "info": "t:sections.main-product.settings.media_size.info"
    },
    {
      "type": "checkbox",
      "id": "constrain_to_viewport",
      "default": true,
      "label": "t:sections.main-product.settings.constrain_to_viewport.label"
    },
    {
      "type": "select",
      "id": "media_fit",
      "options": [
        {
          "value": "contain",
          "label": "t:sections.main-product.settings.media_fit.options__1.label"
        },
        {
          "value": "cover",
          "label": "t:sections.main-product.settings.media_fit.options__2.label"
        }
      ],
      "default": "contain",
      "label": "t:sections.main-product.settings.media_fit.label"
    },
    {
      "type": "select",
      "id": "gallery_layout",
      "options": [
        {
          "value": "stacked",
          "label": "t:sections.main-product.settings.gallery_layout.options__1.label"
        },
        {
          "value": "columns",
          "label": "t:sections.main-product.settings.gallery_layout.options__2.label"
        },
        {
          "value": "thumbnail",
          "label": "t:sections.main-product.settings.gallery_layout.options__3.label"
        },
        {
          "value": "thumbnail_slider",
          "label": "t:sections.main-product.settings.gallery_layout.options__4.label"
        }
      ],
      "default": "stacked",
      "label": "t:sections.main-product.settings.gallery_layout.label"
    },
    {
      "type": "select",
      "id": "media_position",
      "options": [
        {
          "value": "left",
          "label": "t:sections.main-product.settings.media_position.options__1.label"
        },
        {
          "value": "right",
          "label": "t:sections.main-product.settings.media_position.options__2.label"
        }
      ],
      "default": "left",
      "label": "t:sections.main-product.settings.media_position.label",
      "info": "t:sections.main-product.settings.media_position.info"
    },
    {
      "type": "select",
      "id": "image_zoom",
      "options": [
        {
          "value": "lightbox",
          "label": "t:sections.main-product.settings.image_zoom.options__1.label"
        },
        {
          "value": "hover",
          "label": "t:sections.main-product.settings.image_zoom.options__2.label"
        },
        {
          "value": "none",
          "label": "t:sections.main-product.settings.image_zoom.options__3.label"
        }
      ],
      "default": "lightbox",
      "label": "t:sections.main-product.settings.image_zoom.label",
      "info": "t:sections.main-product.settings.image_zoom.info"
    },
    {
      "type": "select",
      "id": "mobile_thumbnails",
      "options": [
        {
          "value": "columns",
          "label": "t:sections.main-product.settings.mobile_thumbnails.options__1.label"
        },
        {
          "value": "show",
          "label": "t:sections.main-product.settings.mobile_thumbnails.options__2.label"
        },
        {
          "value": "hide",
          "label": "t:sections.main-product.settings.mobile_thumbnails.options__3.label"
        }
      ],
      "default": "hide",
      "label": "t:sections.main-product.settings.mobile_thumbnails.label"
    },
    {
      "type": "checkbox",
      "id": "hide_variants",
      "default": false,
      "label": "t:sections.main-product.settings.hide_variants.label"
    },
    {
      "type": "checkbox",
      "id": "enable_video_looping",
      "default": false,
      "label": "t:sections.main-product.settings.enable_video_looping.label"
    },
    {
      "type": "header",
      "content": "t:sections.all.padding.section_padding_heading"
    },
    {
      "type": "range",
      "id": "padding_top",
      "min": 0,
      "max": 100,
      "step": 4,
      "unit": "px",
      "label": "t:sections.all.padding.padding_top",
      "default": 36
    },
    {
      "type": "range",
      "id": "padding_bottom",
      "min": 0,
      "max": 100,
      "step": 4,
      "unit": "px",
      "label": "t:sections.all.padding.padding_bottom",
      "default": 36
    }
  ]
}
{% endschema %}
